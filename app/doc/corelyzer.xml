<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://docbook.org/xml/4.5/docbookx.dtd">

<book>
  <bookinfo>
    <title>Corelyzer User's Manual</title>

    <date>5/5/2020</date>
    <releaseinfo>Last Updated May 5, 2020</releaseinfo>

    <abstract>
      <para>
        <application>Corelyzer</application> 
        is a scalable, extensible visualization tool developed to enhance the 
        study of geological cores. Corelyzer can 
        display large sets of core imagery, with corresponding multi-sensor logs, annotations 
        and plugin-supported visuals alongside. This
        document describes how to download, configure, and use the software.
      </para>
      <para>
        Corelyzer was originally developed by E. Ito, S. Higgins, C. Jenkins, J. Leigh,
        and A. Johnson. CSDCO/LacCore developments have yielded major improvements to
        Corelyzer in recent years through continual feedback from facility visitors
        and the community at large. These efforts have enabled full utilization of the
        software for every project team that visits the facility and by an increasing
        range of institutions around the globe.
      </para>
    </abstract>
  </bookinfo>
  
  <!-- <preface>
    <title>About CoreWall</title>

      <para>
        The CoreWall Suite is a collaborative development for a
        real-time stratigraphic correlation, core description (CD) and
        data visualization system to be used by the marine, terrestrial 
        and Antarctic science communities. The development will be
        carried out in broad collaboration with stakeholders in these
        science communities.
      </para>

      <para>
        To ensure that the software development does not occur independent of
        related IT activities, in particular, the development of the
        U.S. IODP-Phase 2 Scientific Ocean Drilling Vessel (SODV), a Steering
        Committee will be constituted. The Steering Committee will be
        comprised of key U.S. IODP and related database (e.g., CHRONOS, SedDB)
        developers and users as well as representatives of other core-based
        enterprises (e.g., ANDRILL, ICDP, LacCore). Data will be made
        available directly from the numerous hard rock and sediment databases
        or through access provided by a portal such as CHRONOS. CoreWall's
        software displays section images from one or more cores along with
        discrete data streams and nested images to provide a robust approach
        to the description of sediment cores. Split-core surface images are
        the fundamental template of sediment descriptive work. Loaded
        horizontally and viewed in high resolution along a sliding plane,
        features such as lithologic variation, macroscopic grain size
        variation, bioturbation intensity, chemical composition and
        micropaleontology are easier to interpret and annotate.
      </para>

      <para>
        In particular, the CoreWall Suite will incorporate the new Correlator
        software, the updated version of CLIP (e.g. Sagan and Splicer) that
        was developed by the Lamont group more than 10 years ago, into a new
        portable visualization tool that will work across multiple platforms
        and interact seamlessly with both JANUS (ODP's relational database),
        CHRONOS, PetDB, SedDB, dbSEABED and other databases. This
        functionality will result in a CoreWall Suite module that can be used
        and distributed anywhere for stratigraphic and age correlation
        tasks. The versatility and flexibility of these enhanced software
        tools will allow geoscientists to integrate shipboard data entered
        into the JANUS database with third-party analyses of samples distributed
        to other scientists or generated by other programs and projects. While
        doing this, we will abstract the functional algorithms that drive
        NCLIP into software libraries that will be used in the CoreWall Suite
        so that they are available for other software development projects
        that want to build on these modules. In this way, the critical depth
        mapping functionality and enhancements that resulted in NCLIP will be
        integrated into the remarkable visualization capability that is
        CoreWall, which is envisioned to be at the heart of a next-generation
        suite of tools required by the IODP and other ocean science research
        programs, as well as ICDP and other terrestrial core-based research
        programs.
      </para>

      <para>
        CoreWall's high-resolution tiled LCD display gives geoscientists a 
        large-scale perspective, helpful in processing and comparing 
        high-resolution digital line-scan images of cores measuring up to 
        hundreds of feet long. A prototype desktop environment for 
        CoreWall is Personal GeoWall2 (PG2) , a system that uses 
        a single computer to drive four LCD panels as well as 
        a single-screen stereo GeoWall display.
      </para>

      <para>
        CoreWall Affiliate Partners
        
        <simplelist>
          <member>Oceanleadership Consortium</member>
          <member>USIO Science Services, TAMU: Integrated Ocean Drilling
          Program at Texas A &amp; M University</member>
          <member>CHRONOS</member>
          <member>ANDRILL: Antarctic Geological Drilling Program</member>
          <member>LacCore: U.S. National Lacustrine Core Repository at
          University of Minnesota</member>
          <member>Electronic Visualization Laboratory, University of
          Illinois at Chicago</member>
        </simplelist>
      </para>

      <para>
        Corelyzer is being developed by the University of Illinois at
        Chicago’s Electronic Visualization Laboratory with funding
        provided by the National Science Foundation under the
        agreement number OCE-0602121.
      </para>

      <figure>
        <title>National Science Foundation Logo</title>
        <graphic fileref="images/nsflogo.png" />
      </figure>

      <figure>
        <title>Electronic Visualization Laboratory Logo</title>
        <graphic fileref="images/evllogo.png" />
      </figure>

      <figure>
        <title>LacCore Logo</title>
        <graphic fileref="images/laccorelogo.png" />
      </figure>

      <figure>
        <title>Borehole Research Group, LDEO Logo</title>
        <graphic fileref="images/brglogo.jpg" />
      </figure>

      <figure>
        <title>CoreWall Logo</title>
        <graphic fileref="images/corewall_logo.png" />
      </figure>

      <figure>
        <title>Corelyzer Logo</title>
        <graphic fileref="images/corelyzerlogo.jpg" />
      </figure>

  </preface> -->

  <chapter>
    <title>Pre-installation Requirements</title>

    <sect1>
      <title>Hardware</title>
      <para>
        Graphics: Corelyzer takes advantage of hardware-accelerated
        graphics. While primarily a 2D visualization program,
        Corelyzer uses OpenGL to accelerate rendering and take
        advantage of modern day graphics boards. Thus
        the performance of the application depends on both
        the speed of your CPU and the power of your Graphics
        Processing Unit (GPU). Modern graphics cards can run
        Corelyzer without issue.
      </para>

      <para>
        Storage: Corelyzer's performance is also closely tied to the speed of storage
        devices. Solid state drives (SSDs) greatly improve performance over hard-disk
        drives (HDDs), especially in large projects where the volume of imagery requires
        frequent reads of cached data.
      </para>

      <para>
        Memory: At least 2GB of RAM is recommended if
        you intend to work with projects comprising 100+ meters of high-resolution
        core images.
      </para>
      
      <para>
        Displays: Corelyzer does not currently support heterogeneous display settings.
		    This means that if you have one
        monitor at 1280x1024 resolution, and another at
        1600x1200 resolution, you'll have to choose one or the other when
        defining your Corelyzer display settings.
      </para>
    </sect1>
    <sect1>
      <title>Software</title>
      <para>
        Corelyzer makes use of the Java Runtime Environment (JRE) version 8,
        which is bundled with the application.
      </para>
    </sect1>

    <!-- <sect1>
      <title>Example Hardware Setups</title>
      <para>
        Corelyzer will work on most modern laptops or desktops
        running Windows (XP or higher) or Mac OSX/macOS (10.10 "Yosemite" or higher) with
        64-bit processors. To maximize performance,
        we suggest prioritizing high-end 3D graphics cards, Solid State Drive (SSD) storage,
        processor speed, and RAM (in that order).
        Larger monitors give more workspace and a better view, but performance does degrade
        somewhat as each monitor is added to the system. In multi-panel setups, monitors with
        thin bezel (border/edge strip) will provide a better experience.

        Some examples of CoreWall setups are described below. For more information, please contact the people listed.
      </para>

      <sect2>
        <title>ANDRILL - Antarctica Geological Drilling</title>
        <para>
          ANDRILL's CoreWall Hardware Spec: an Apple Mac Pro with
          nVidia Quadro FX 4500 graphics card. 2 30" Apple Cinema
          Displays. 
          Contact: Josh Reed <email id="joshsemail">jareed at andrill.org</email>
        </para>

        <figure>
          <title>ANDRILL CoreWall Setup</title>
          <graphic fileref="images/andrill_hw_setup.jpg"/>
        </figure>
      </sect2>

      <sect2>
        <title>Electronic Visualization Laboratory, University of
        Illinois at Chicago</title>
        <para>
          EVL's CoreWall Hardware Spec: a Dell Pentium 4 XPS PC with 3
          PCI nVidia Quadro FX500 graphics cards. 5 20" ViewSonic LCD
          Displays. Contact: Andy Johnson<email
          id="andysemail">ajohnson at uic.edu</email>
        </para>

        <figure>
          <title>EVL CoreWall Setup</title>
          <graphic fileref="images/evl_hw_setup.jpg"/>
        </figure>
      </sect2>

      <sect2>
        <title>National Lacustrine Core Facility, University of Minnesota</title>
        <para>
          LacCore's CoreWall Hardware Spec: 
          Dell Precision T3500 with Intel Xeon W3550 3.0GHz / 8M L3 processor at 4.8 GT/s, 4GB 1066MHz DDR3 SDRAM, dual 768MB NVIDIA Quadro FX1800 graphics cards running 4 x 30-inch Dell displays. WinXP. Contact: Anders Noren <email
          id="andersemail">noren021 at umn.edu</email>
        </para>

        <figure>
          <title>LacCore CoreWall Setup</title>
          <graphic fileref="images/laccore_hw_setup.jpg"/>
        </figure>
      </sect2>

      <sect2>
        <title>Lamont-Doherty Earth Observatory, the Earth Institute
        at Columbia University</title>
        <para>
          LDEO's CoreWall Hardware Spec: a Mac Pro with 4 nVidia
          GeForce 7300 GT graphics cards. 6 Apple 23" Cinema
          Displays. <ulink
          url="http://corelyzer.blogspot.com/2007/10/ldeo-corewall-setup-details.html">
          More Information</ulink> Contact: Sean Higgins 
          <email id="seansemail">sean at ldeo.columbia.edu</email>
        </para>

        <figure>
          <title>LDEO CoreWall Setup</title>
          <graphic fileref="images/ldeo_hw_setup.jpg"/>
        </figure>
      </sect2>

    </sect1> -->

    <!-- <sect1>
      <title>Software</title>
      <para>
        Corelyzer makes use of the Java Runtime Environment (JRE) version 8, which is bundled with the application.
      </para>

    </sect1> -->

  </chapter>

  <chapter>
    <title>Download and Install Corelyzer</title>

    <sect1>
      <title>Download Corelyzer</title>
      <para>
        You can download copies of the application for the following
        platforms at the main download page:  
        <ulink
            url="https://github.com/corewall/corelyzer/releases">
          https://github.com/corewall/corelyzer/releases
          </ulink>.
      </para>
    </sect1>

    <sect1>
      <title>Install Corelyzer</title>

      <sect2>
        <title>Microsoft Windows Users</title>
        <para>
          Extract the downloaded .zip archive by right-clicking the
          file and selecting "Extract All...". Extract Corelyzer to the desired
          directory and double-click the Corelyzer icon to launch.
        </para>
      </sect2>

      <sect2>
        <title>Apple Mac OS X/macOS Users</title>
        <para>
          Unzip the downloaded file by double-clicking and you'll see the application icon.
        </para>

        <para>
          You can drag the application to your
          preferred disk location, like the Applications directory
          or your Desktop. Double click the icon to launch
          Corelyzer.

          <figure>
            <title>Corelyzer in Mac OS X/macOS</title>
            <graphic fileref="images/mac_install.png" />
          </figure>
        </para>
      </sect2>

    </sect1>
  </chapter>

  <chapter>
    <title>Running Corelyzer</title>

    <sect1>
      <title>Setting up the desktop environment</title>
      <para>
        Before starting Corelyzer, you should first make sure your display
        settings are correct. On both the Mac and Windows, the default
        monitor should be the “upper left most monitor”.
      </para>

      <sect2>
        <title>Microsoft Windows Users</title>
        <para>
          To setup the monitors on Windows, you must first go to your
          "Display". You can do this by going to the Start
          menu, selecting "Control Panel" and double-clicking on
          "Display".

          <figure>
            <title>Display in Control Panel</title>
            <graphic fileref="images/windows_controlpanel.png" />
          </figure>
        </para>

        <para>
          Once opened, go to the Settings tab. Here you will
          see boxes with numbers representing the monitors connected
		  to your machine. If you have a
          monitor that is not displaying your desktop then it will
          show up as a slightly grayed-out box, indicating this monitor
		  is disabled. If the box
          indicates the monitor is disabled and you click on the box,
          you will be able to modify the options for that monitor. To
          enable the monitor, make sure that the check box next to
          Extend my desktop... is checked. Do this for all the
          monitors you would like to use, presumably all of them. Then
          click on the Apply button. Your desktop should be visible on
          all the selected monitors. 
          
          <figure>
            <title>Display</title>
            <graphic fileref="images/windows_displayproperties.png" />
          </figure>
        </para>

        <para>
          Note: Some monitors need to be turned off and on again to
          be recognized by Windows. Once the
          desktop is visible on your monitors, you will need to set
          the display resolution for all of the monitors. Corelyzer
          requires that all monitors use the same resolution. Example resolutions
          are 1280x1024 and 1600x1200. There is a slider on your
          display settings dialog to modify the resolution. Once set
          for all monitors, click on the Apply button again. If you
          are prompted to restart your machine in order for the
          changes to take effect, then do so. Otherwise, the
          resolution of your monitors will change and you will be
          prompted to keep the settings or change them back. 
        </para>

        <para>
          Note: If your monitors do not support a particular
          resolution, they'll typically display a message to that effect,
          or display nothing (black). After you have enabled your
          monitors and configured their display settings,
          make sure that the layout of the monitors matches the layout
          of the boxes in your display settings. Click the Identify
          button, and note the number Windows assigns to each monitor.
          If your monitors are
          ordered differently than the boxes that are shown on your
          display settings, then you will need to re-arrange your
          monitors. This is done by clicking and dragging the
          boxes in your settings window. Again, you should make sure
          that the upper left most box matches your upper left
          most monitor, and that monitor is enabled as your Primary
          Monitor.
        </para>

        <para>
          Note that the desktop numbering in Microsoft Windows
          depends on the order in which you've connected monitors to
          your graphics card(s). It may not appear in ascending
          order from left to right. Ensure that your monitors' physical
          arrangement matches the onscreen identify result and the
          display properties display, as shown in the following two
          screenshots.

          <figure>
            <title>Example desktop configuration</title>
            <graphic fileref="images/windows_desktops.png"/>
          </figure>

          <figure>
            <title>Arrange desktops with drag-and-drop</title>
            <graphic fileref="images/windows_desktopdrag.png" />
          </figure>

        </para>
      </sect2>

      <sect2>
        <title>Apple Mac OS X/macOS Users</title>
        <para>
          To setup your monitors on your Mac, open the Displays
          item in System Preferences. To do this, click the Apple menu in the
		  upper-left of the screen and select "System Preferences". Then
          choose "Displays", and you will see a dialog window on each
          monitor that is connected to your machine.

          <figure>
            <title>Displays setup in System Preferences</title>
            <graphic fileref="images/mac_displays.png" />
          </figure>
        </para>
        
        <para>
          Make sure the display resolution on each monitor is the
          same. After fixing the resolution, go to your main window
          and select the "Arrangement" tab. You will then see a layout
          of boxes that indicate how your monitors are laid
          out. Unfortunately there is no way to identify which monitor
          is represented by which box, as you can on Windows. You will
          need to arrange the boxes to match your monitor arrangement.
        </para>

        <para>
          Make sure the upper left
          most monitor in your arrangement is be the main
          monitor. On Mac, the main monitor is visible in the
          Arrangement tab as the box with a white rectangle
          along its top. To designate a different monitor
          to be the main monitor, drag the white rectangle to
          the box that should be the main monitor. This white
          rectangle is actually the menu bar you see on top of your
          monitor. Once the rectangle has been moved, the menu bar
          will move as well.

          <figure>
            <title>Arrange tab in Displays setting</title>
            <graphic fileref="images/mac_display_arrangement.png" />
          </figure>

        </para>

        <para>
          If you are making a presentation, then you may want to mirror
          your display. Otherwise, it's best not to mirror your
          display, so Corelyzer has more screen real estate in which to
          draw core images and data.
        </para>
      </sect2>
    </sect1>

    <sect1>
      <title>Corelyzer Preferences</title>
      <para>
        To launch Corelyzer, double-click on the Corelyzer icon.
        If you're launching Corelyzer for the first time, the
		Corelyzer Preferences dialog will appear, in which you
		can specify your scratch disk location,
        display settings, and user interface features.
        <!-- <figure>
          <title>Corelyzer Preferences Window</title>
          <graphic fileref="images/corelyzer_preferences.png"  />
        </figure> -->
      </para>

      <sect2>
        <title>User Interface Panel</title>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Automatically check for updates on startup: Corelyzer will
                automatically check for the latest version of the software at launch.
              </para>
            </listitem>

            <listitem>
              <para>
                Lock depth of core section images after loading: cores loaded while
				this option is enabled cannot be moved up or down stratigraphically unless they
        are manually unlocked.
              </para>
            </listitem>

            <listitem>
              <para>
                Double-clicking section name zooms to that section: double-clicking the
				section name in the session/iCores window shows the entire section at the
				highest zoom level that can accommodate its length.
              </para>
            </listitem>

            <listitem>
              <para>
                Show crosshair at origin: show the visualization canvas's origin axes.
              </para>
            </listitem>

            <listitem>
              <para>
                Show labels for sections with data but no image: show section label for dummy
				sections (those with plotted data but no image).
              </para>
            </listitem>

            <listitem>
              <para>
                Canvas always draws below external application windows: windows of non-Corelyzer
				applications will always draw below the visualization canvas. We recommend disabling
				this option.
              </para>
            </listitem>

            <listitem>
              <para>
                Scroll wheel/gesture zooms in Vertical Depth Mode: in Vertical Depth Mode,
				scroll wheel or gesture will zoom/unzoom when this option is enabled. If disabled,
				they will pan along the depth axis.
              </para>
            </listitem>

            <listitem>
              <para>
                Horizontal or Vertical Depth Mode: defines the depth
                orientation. In Horizontal Depth Mode, depth increases from left to right.
				In Vertical Depth Mode, depth increases from top to bottom.
              </para>
            </listitem>

            <listitem>
              <para>
                Canvas background color: defines the background color
                of the visualization canvas. 
              </para>
            </listitem>

            <listitem>
              <para>
                Canvas grid: enable/disable and defines the background
                measurement grid parameters. In "Grid Type", 5 types of
                grid are supported: Basic Cross, Horizontal Lines,
                Vertical Lines, Points and Cross Points.
              </para>
            </listitem>

          </itemizedlist>
        </para>

        <figure>
          <title>User interface panel</title>
          <graphic fileref="images/corelyzer_ui.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Displays Panel</title>
        <para>
          Here you can set the display configuration that Corelyzer will
          use. Typically, it should match the display
          configuration you set up with your operating system (see above
          sections). After establishing inital settings, Corelyzer
          will load the saved configurations on future launches without
          showing the Preferences window.
        </para>

        <para>
          <itemizedlist>

            <listitem>
              <para>
                Rows, Columns: define how many monitors you have,
                and how they are arranged.
              </para>
            </listitem>

            <listitem>
              <para>
                Screen Width, Screen Height: define the size of
                a single monitor in pixels. The first time Corelyzer
                is launched, these settings will default to the full dimensions
                of the primary display.
              </para>
            </listitem>

            <listitem>
              <para>
                Screen DPI X, Screen DPI Y: DPI stands for "dots per
                inch". These define the mapping from pixels to
                physical measurement. In most cases, the default values
                should work correctly.
              </para>
            </listitem>

            <listitem>
              <para>
                Column Offset, Row Offset: Defines the offsets, in pixels,
                of the visualization area from the origin (the upper-left corner
                of the primary display).
              </para>
            </listitem>

            <listitem>
              <para>
                Border Thickness: The visualization takes into account
                the monitor border in tiled displays setup. In most
                cases, the default values should work correctly.
              </para>
            </listitem>

          </itemizedlist>
        </para>

        <figure>
          <title>Displays panel</title>
          <graphic fileref="images/corelyzer_display.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Directories Panel</title>
        <para>
		  Image Cache: The first time you load a core section image, Corelyzer processes
		  that image into a series of "blocks": sub-images at low, medium, and high resolutions.
		  This processing is done in order to improve performance. Because this initial processing
		  takes a fair amount of time, the "blocks" are stored locally in this directory for future
		  use.
		  
          Downloads: Corelyzer stores local copies of images downloaded
		  from remote servers in this directory.
          <figure>
            <title>Directories panel</title>
            <graphic fileref="images/corelyzer_directories.png" />
          </figure>
        </para>
      </sect2>


      <sect2>
        <title>Session Sharing and DIS Panels</title>
        <para>
          These panels, for advanced use cases, allow you to set up session
          sharing and default annotation dictionary definition. For most users,
          the settings here can be ignored.
        </para>

      </sect2>

    </sect1>
  </chapter>

  <chapter>
    <title>Corelyzer Layout</title>
      <para>
        Once the OK button is clicked in the initial preferences
        configuration, a window (or multiple windows)
        will be created, according to your configuration, for the
        visualization display.
      </para>

      <figure>
        <title>Initial Corelyzer appearance</title>
        <graphic fileref="images/corelyzer_init.png" />
      </figure>

      <para>
        Corelyzer has three primary windows: 
        <orderedlist>
          <listitem><para>Tool Palette</para></listitem>
          <listitem><para>Session Window (aka "iCores")</para></listitem>
          <listitem><para>Visualization Canvas</para></listitem>
        </orderedlist>
      </para>

      <sect1>
        <title>Tool Palette</title>
        <figure>
          <title>Tool Palette Functions</title>
          <graphic fileref="images/tool_palette.png" />
        </figure>

        <para>
          The Tool Palette contains frequently-used functions and modes. In
          a multi-display setup, the Tool Palette will appear in the same
          display as the mouse cursor.
        </para>

        <para>
          The Tool Palette buttons, from left to right:
        </para>

        <para>
          Interaction mode:

          <itemizedlist>
            <listitem>
              <para>
                Normal mode: Dragging the mouse will pan the Visualization Canvas.
                The mouse scroll wheel or a trackpad scroll gesture will zoom
                the Visualization Canvas in and out.
              </para>
            </listitem>

            <listitem>
              <para>
                Create annotation mode: Select a rectanglar area in which to
                create an annotation on loaded core images.
              </para>
            </listitem>

            <listitem>
              <para>
                Modify annotation marker mode: Select and highlight a
                created annotation to modify the annotation area and the
                annotation flag icon's position.
              </para>
            </listitem>

            <listitem>
              <para>
                Measure mode: Specify the start and end of a segment of interest.
                The physical measurement will be calculated based on the Screen DPI X/Y
                resolution values specified in the Displays panel of Preferences.
              </para>
            </listitem>
          </itemizedlist>

          Cursor type:
          <itemizedlist>
            <listitem>
              <para>
                Regular navigation cursor: The standard arrow cursor will
                be displayed in the visualization canvas.
              </para>
            </listitem>

            <listitem>
              <para>
                CrossHair cursor: In additional to standard arrow cursor, a
                crosshair indicating the current depth will be displayed
				        in the visualization canvas.
              </para>
            </listitem>
          </itemizedlist>

          Common system actions:
          <itemizedlist>
            <listitem>
              <para>
                Show/Hide main window: Show or hide the session/iCores window.
              </para>
            </listitem>

            <listitem>
              <para>
                Minimize Corelyzer: Minimize all Corelyzer windows.
              </para>
            </listitem>

            <listitem>
              <para>
                Quit Corelyzer: Close the Corelyzer application.
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </sect1>

      <sect1>
        <title>Session/iCores window</title>
        <para>
          The main session/iCores window is used to manage sessions, tracks, 
		  section images, and datasets.
        </para>

        <!-- <sect2>
          <title>Menus</title>
          <para>
            The menubar has File, Edit, Share, Plugins,
            Lists, and Help menus. Each menu option will
            be described in later chapters.
          </para>
        </sect2> -->

        <sect2>
          <title>Local</title>
          <para>
            Clicking on the "Local" item in the "My Core Repository"
            panel will show the currently-loaded sessions, tracks, 
			core sections, datafiles and the fields available in each
			dataset. Corelyzer can have multiple sessions, each containing
			multiple tracks, sections, and datafiles.
          </para>

          <figure>
            <title>Session/iCores window</title>
            <graphic fileref="images/icores_window.png"/> <!-- TODO update to remove Subscriptions? -->
          </figure>
        </sect2>

        <!-- <sect2>
          <title>Subscriptions</title>
          <para>
            Corelyzer supports core data list syndication (CoreCast) via Atom
            feeds. If you subscribed to feeds, they will be attached
            to the "Subscription" label in "My Core Repository". Clicking
            on the subscribed feed entry will show the core summary in
            the right hand panel as pictured below.
          </para>

          <figure>
            <title>Session/iCores feed window</title>
            <graphic fileref="images/icores_feeds.png" />
          </figure>

        </sect2> -->
      </sect1>

      <sect1>
        <title>Visualization Canvas</title>
        <para>
          Core images, plotted data, etc. are displayed on the visualization canvas.
        </para>

        <figure>
          <title>Visualization canvas with loaded core data</title>
          <graphic fileref="images/viz_canvas.png" />
        </figure>
      </sect1>

  </chapter>

  <chapter>
    <title>Load Images</title>
    <sect1>
      <title>Preparing to Load Core Section Images</title>
      <para>
        Before you proceed, make sure you know the following properties of the images to be loaded:

          <itemizedlist>
            <listitem><para>Orientation: Are the images horizontally or vertically oriented?
        For horizontally-oriented images, depth is assumed to increase from left to right.
        For vertically-oriented images, top to bottom.</para></listitem>
            <listitem><para>Resolution: What's the resolution of the images in dots-per-inch (DPI)?
        </para></listitem>
          </itemizedlist>
      
        Corelyzer requires these properties to process and render section images at the correct scale.
      </para>
    
    <para>
      How do you determine the DPI of your image? This depends on the equipment used to capture the image.
      Most line-scan cameras that are manufactured
      for the creation of high-resolution images of core sections indicate DPI on their packaging,
      but sometimes they don't save in the expected DPI. One method of ensuring a correct DPI is described in
      <ulink url="apas02.html">Making Sure the DPI of an Image is Correct</ulink>. When loading images
      you can also specify the length of a core section image, from which Corelyzer
      can calculate the appropriate DPI value.
    </para>
  </sect1>

  <sect1>
    <title>Selecting an Image Loading Method</title>
    <para>
      Once you know your images' properties, you can proceed to load them. Corelyzer offers two methods.
    </para>

    <para>
      The first method, <link linkend="sec.loadLocalImageFiles">Load local image files</link>,
      is recommended for most users. You'll select a batch of image files to load. Corelyzer
      will attempt to organize them into tracks based on their filenames. You can modify this
      order as needed, along with other image properties like resolution (DPI) and orientation.
      This approach works well when your images' filenames use
      the LacCore, IODP, or ICDP section naming convention or similar.
      Loaded cores in each track will be placed end to end.
    </para>
    <para>If your cores do not use a standard naming convention, it may be easier to use
      the second method, <link linkend="sec.loadImageListing">Load images with an Image Listing file</link>.
      For each track, you'll need to create a CSV file with the image file and properties
      for each section in that track. This method also allows you to position each core at a specific
      depth.
    </para>
  </sect1>

    <sect1 id="sec.loadLocalImageFiles">
      <title>Load local image files</title>
		<para>
			First, select the menu item File > Load Images > Open
			Image Files.... Select one or more files to load in the resulting dialog:
			<figure>
			  <title>Select image files to load</title>
			  <graphic fileref="images/loadImages-1.png" />
			</figure>
		</para>

		<para>
			By default, Corelyzer displays core imagery by placing section
			images in horizontal tracks. Each track corresponds to a single hole.
			After images to load are selected, Corelyzer will attempt to organize these images
			into new and/or existing tracks based on image filenames and existing track names
			(if present). The following dialog displays the suggested
			organization and allows the user to modify it as needed.
			
			<figure>
			  <title>Arrange loaded image files</title>
			  <graphic fileref="images/loadImages-2.png" />
			</figure>
			
			In Figure 5.2, note that the nine loaded sections have been organized into three tracks.
			Tracks are indicated by "Track" prefixing their name and a beige background.
			Note that all sections and tracks have a green dot to their left indicating that
			they've just been loaded (sections) or created (tracks). Most operations in this
			dialog apply only to these new tracks and sections. To adjust the structure and
			arrangement of tracks and sections, use the buttons described below:
			
			<itemizedlist>
			  <listitem><para>Move Up/Down: Move selected sections up/down within a track or between tracks.</para></listitem>
        <listitem><para>Move To Track...: Move selected sections to a specific track.</para></listitem>
			  <listitem><para>Delete: Remove selected section or track from the list. Tracks containing
				sections cannot be deleted until emptied.</para></listitem>
			  <listitem><para>Rename Track: Rename selected track.</para></listitem>
			  <listitem><para>New Track: Create a new track.</para></listitem>
			</itemizedlist>
			
			Once the arrangement of sections and tracks is correct, input your images' DPI values
			in the DPI X/Y fields.  Because DPI X and DPI Y are almost always the same, the value
			entered	in the X field will be immediately copied into the Y field if it's blank. Orientation
			defaults to Horizontal; change it to Vertical if necessary. Now that image properties and 
			section order have been established, Corelyzer can place sections in appropriate tracks and
			position them end-to-end. To proceed, click the "Next >" button.
			
			The	resulting dialog allows the user to review and modify image properties, if necessary:
			
			<figure>
			  <title>Set image properties</title>
			  <graphic fileref="images/loadImages-3.png" />
			</figure>
			
			As you can see in the (rightmost) Depth column, the first section of the 10A track starts
      at depth zero. The following four sections are also part of the 10A track, so each is placed
      at the end of the previous section. The next section is from a new track, 10B, thus it's
      placed at depth zero. The final three sections are part of track 11A.  Starting from depth zero,
		  each is placed at the bottommost depth of the preceding section.

			<para>
			The section image properties can be modified individually by selecting the cell you wish to change and
			hitting the Return/Enter key, or by double-cliking the desired cell.  To modify
			values for multiple sections, you can use the Batch Input controls below the section
			property table. Check the "Batch input..." checkbox to enable the controls, and enter
			the desired settings. If you want to apply these settings to all sections in the table,
			click the Apply to All Rows button. If you want to apply these settings only to certain
			sections, select those sections in the section property table, then click the Apply to 
			Selected Rows button. In both cases, only populated fields will modify the corresponding
			table cells.
			</para>
			
			<para>
			If you modify DPI values on the depth axis (DPI X for horizontal images, DPI Y
			for vertical), section lengths and depths will be updated automatically so sections
			in each track are positioned end-to-end when loaded.
			</para>

			<para>
			When you are satisfied with the image properties, click the Finish button.
			Corelyzer will begin loading images with the specified parameters.
			</para>
		
			<para>
			Once completed, the visualization window will display core images
			and the Section listbox in the main session/iCores window will update with the image
			filenames loaded in each track. Notice in the image below that the ruler in the core image
			closely matches the depth measurements at the bottom of
			the visualization window. This visual check is an excellent way to confirm the
			proper DPI values were used.
			
			<figure>
			  <title>Visualization canvas with loaded core section image</title>
			  <graphic fileref="images/loadImages-4.png" />
			</figure>
			</para>

		</para>
	</sect1>

  <sect1 id="sec.loadImageListing">
    <title>Load images with an Image Listing file</title>
    <sect2>
      <title>Preparing Image Listing files</title>
      <para>
        Image Listing files must be in CSV (comma-separated values) format.
        They can be created manually in Excel (Save As... and choose the CSV format)
        or a text editor (Save with a ".csv" extension, not ".txt").
        They can also be <link linkend="sec.createImageListing">created</link> in the Image Listing dialog.
      </para>
      <para>
        An Image Listing file contains one or more rows. Each row has exactly six values,
        separated by commas. These values are:
        <itemizedlist>
          <listitem>Filename: an image file name, optionally with a complete path</listitem>
          <listitem>Orientation: "Horizontal" or "Vertical" (excluding quotes)</listitem>
          <listitem>Length: the physical length of the imaged core section, in meters</listitem>
          <listitem>DPI X: the horizontal resolution of the image</listitem>
          <listitem>DPI Y: the vertical resolution of the image (usually the same as DPI X)</listitem>
          <listitem>Depth: the depth at which to place this core section image, in meters</listitem>
        </itemizedlist>
      </para>
      <para>
        If the filename includes a full path e.g.
        <blockquote><function>C:\Users\jane\Documents\core1.jpg (Windows)</function></blockquote>
        <blockquote><function>/Users/jane/Documents/core1.jpg (Mac)</function></blockquote>
        it will be loaded from that location. If it cannot
        be found there, Corelyzer will try to load the file from the same location as the
        Image Listing file.
      </para>
      <para>
        If the filename does not include a path e.g. <function>core1.jpg</function>, it must be in the same directory as
        the Image Listing file to be loaded.
      </para>
      <para>
        You'll need one Image Listing file for each hole/track you want to create in Corelyzer.
        Images will be loaded in the order they appear in the listing.
      </para>
    </sect2>

    <sect2>
      <title>Using the Image Listing dialog</title>
      <para>First, select the File > Load Images > Open Image Listing... menu item.</para>
      <figure>
        <title>Image Listing dialog</title>
        <graphic fileref="images/imageListing-1.png" />
      </figure>
      <sect3><title>Dialog Controls</title>
        <para>
          The Image Files and Properties area consists of a table listing 
          image properties, buttons to modify that table, and batch controls
          to modify mutiple image properties at once.
          <itemizedlist>
            <listitem>
              Image listing table: lists images in the current listing. Properties can be modified
              by selecting the cell you wish to change and pressing the Return/Enter key,
              or double-clicking.
            </listitem>
            <listitem>
              Select Images... button: select image files to add to the current listing
            </listitem>
            <listitem>
              Open Image Listing... button: select an Image Listing file. Its
              contents will be added to the current listing.
            </listitem>
            <listitem>
              Save Image Listing... button: saves the current listing to a file for future use.
            </listitem>
            <listitem>
              Reset button: clears the current listing.
            </listitem>
            <listitem>
              Batch input panel:  To modify values for multiple items in the current listing,
              you can use the Batch Input controls below the image listing table.
              Check the "Batch input..." checkbox to enable the controls, and enter the desired
              settings. If you want to apply these settings to all sections in the table, click
              the Apply to All Rows button. If you want to apply these settings only to certain
              sections, select those sections in the section property table, then click the Apply
              to Selected Rows button. In both cases, only populated fields will modify the
              corresponding table cells. 
            </listitem>
          </itemizedlist>
        </para>
        <para>
          In the Destination Track area, select the track into which images
          should be loaded. New tracks can be created with the Create Track button.
        </para>
      </sect3>
      <sect3><title>Loading Existing Image Listing files</title>
        <para>
          If you've created an Image Listing file, open it using the Open Image Listing... button.
          The contents of that file will be added to the image listing table.
        </para>
        <para>
          Modify any properties, if needed.
        </para>
        <para>
          Select the destination track for the images, creating a new track if necessary. Then click
          the OK button. Your cores will begin to load into the selected destination track, in the
          order they appear in the listing.
        </para>
      </sect3>
      <sect3 id="sec.createImageListing"><title>Creating Image Listing files</title>
        <para>
          To create an Image Listing file, first add one or more image files with the Select
          Image Files button. (Remember that each Image Listing file should include cores for
          a single hole/track.) The selected images will be added to the table with default properties:
          Horizontal orientation, 1.5m length, 0 DPI X and Y, and depths starting from 0m,
          incrementing by 1.5m for each image.
        </para>
        <para>
          If a DPI of zero is specified, Corelyzer will use the Length value and the image's width or
          height in pixels (for Horzontal or Vertical orientation, respectively) to determine resolution.
          If a non-zero DPI is specified, Corelyzer will use that resolution and disregard the Length.
        </para>
        <para>
          Modify the properties as needed to reflect the images.
        </para>
        <para>
          Click Save Image listing... and select a name and location to save the Image Listing file.
          Image Listings created in this manner will always use full paths for filenames.
        </para>
        <para>
          At this point, you can choose a destination track and load the images in the current listing
          if desired. Otherwise, you can Reset the list and create additional Image Listing files.
        </para>
      </sect3>
    </sect2>
  </sect1>

    <!-- <sect1>
      <title>Load Images from online services</title>

      <para>
        Corelyzer includes a simple interface to retrieve high-resolution
		core section images from online services like the IODP's Janus
        database and LIMS service.
      </para>

      <para>
        Currently, Corelyzer supports three online core image
        services: JANUS database with CHRONOS service, IODP LIMS
        on-shore database, and the IODP LIMS on-ship database. For two IODP
        LIMS services, the query web service protocol is used to
        retrieve core images' metadata.

        Corelyzer uses the CHRONOS web service's
        capabilities to access JANUS and retrieve the URLs to the
        images. 

        Because IODP images are vertically oriented, Corelyzer will
        rotate the images 90 degrees counter-clockwise. This plugin accurately
		positions core sections by using the CHRONOS
        web service to access the curated length and top depth (mbsf)
        of each core section image.
      </para>

      <para>
        The user interface has been designed in a
        stream-lined manner. To bring up the plugin select the menu
        item File > "Show IODP lists..." > "Image list from services"
        tab. 
        
        In order to get an image listing and load selected images:

        <orderedlist>
          <listitem><para>Select which online service to
          use. Currently CHRONOS, on-shore LIMS and on-ship LIMS
          services are available.</para></listitem>
          <listitem><para>Enter an IODP site to search for (e.g. site number 1215)</para></listitem>
          <listitem><para>Click on the Search button. A listing of
          core section images should become
          available</para></listitem>
          <listitem><para>You can optionally input the depth range to
          filter the returned available image section in the result
          table. Depth range should be input as string like "0-20",
          meaning only image sections with top depth zero to twenty meters (mbsf).
		  The default value 0.0 will list all image sections
          returned by the online service.</para></listitem>
          <listitem><para>Select the images to load</para></listitem>
          <listitem><para>Click on the "Load selected image files" button</para></listitem>
          <listitem><para>Image files will then be downloaded, processed, and displayed.
			A progress bar indicating the status will update during the
            process in the session/iCores window.</para></listitem>
          </orderedlist>
        </para>
          
        <para>
          Each loaded image will be placed in the session and track
          named with the combination of "leg", "site", "hole" and
          "core" metadata information from the online core image server.

          <figure>
            <title>Online core image service query interface</title>
            <graphic fileref="images/onlineImageService-1.png" />
          </figure>

          <figure>
            <title>Online core image service query</title>
            <graphic fileref="images/onlineImageService-2.png" />
          </figure>

        </para>

        <para>
          A screen capture video of these actions can be found in this
          <ulink
              url="http://www.evl.uic.edu/cavern/corewall/documents/movies/5.2-LoadJanusImages.mov">link
          online (size: 1.6MB)</ulink>.
        </para>
    </sect1> -->

    <!-- <sect1>
      <title>Load Images from CoreCast syndication feeds</title>
      <para>
        Corelyzer supports core data list syndication (CoreCast) via
        Atom feeds. If you subscribed to feeds, they will be attached
        to the "Subscription" label in "My Core Repository".
      </para>

      <sect2>
        <title>Subscribe to CoreCast feeds</title>
        <para>
          First, show the session/iCores window (if necessary) with the
		  Show/Hide button in the Tool Palette. Then click on the plus icon
		  to add a new feed.

          <figure>
            <title>Add a new feed</title>
            <graphic fileref="images/icores-1.png" />
          </figure>
        </para>

        <para>
          If you know the feed's URL, enter the URL in the popup dialog.
		  Otherwise, you can click on the "Browse"
          button to list available feeds.

          <figure>
            <title>Specify feed URL</title>
            <graphic fileref="images/icores-2.png" />
          </figure>
        </para>

        <para>
          Here the "Browse" button is clicked. Next click on the
          "Refresh" button to show available feeds.

          <figure>
            <title>Refresh available lists</title>
            <graphic fileref="images/icores-3.png" />
          </figure>

        </para>

        <para>
          Check the desired feeds, then click on "OK" to subscribe
          to them. These feeds will be added to the main
          session/iCores window. Selecting a feed under the
          "Subscription" label will display the list of core images in
          the feed. Clicking a core image entry will display a
          summary report of the image in the panel below.

          <figure>
            <title>Select to subscribe feeds</title>
            <graphic fileref="images/icores-4.png" />
          </figure>
        </para>
      </sect2>

      <sect2>
        <title>Load core images from CoreCast feeds</title>
        <para>
          Select one or more core images of interest and
          right-click to see available options.

          <figure>
            <title>Select core image entries and right-click</title>
            <graphic fileref="images/icores-5.png" />
          </figure>
        </para>

        <para>
          Select "Load" to download and load selected core images into
          Corelyzer. Select or fill in the intended track name for
          the selected core images.

          <figure>
            <title>Specify a track to hold selected core images</title>
            <graphic fileref="images/icores-6.png" />
          </figure>
        </para>

        <para>
          Clicking "OK" will start the download and load
          process. Click on the "Local" label at the left hand side to
          see if the selected sections are loaded.

          <figure>
            <title>Images loaded with iCores feeds</title>
            <graphic fileref="images/icores-7.png" />
          </figure>
        </para>

        <para>
          A screen capture video of these actions can be found in this
          <ulink
              url="http://www.evl.uic.edu/cavern/corewall/documents/movies/5.3-LoadCoreCastImages.mov">link
          online (size: 10MB)</ulink>.
        </para>

      </sect2>

    </sect1> -->

    <!-- <sect1>
      <title>Load images using IODP-formatted section list</title>
      <para>
        Click on the meun "File" -> "IODP" -> "Load section list" and
        select a section list file in format like <ulink
        url="attachments/holeB.dat">example file</ulink> (remote
        image files) and <ulink
        url="attachments/A-mac.txt">example file</ulink> 
        (local image files) will load and
        show the content of the list as shown in the following screen
        captures.
      </para>
      
      <para>
        The section list file can be generated by any text editor or
        Excel. You will have to save the file as "tab-separated
        format". The file will need to include the following columns, in order:

		<simplelist>
		<member>"Leg"</member>
		<member>"Site"</member>
		<member>"Hole"</member>
		<member>"Core"</member>
		<member>"Type"</member>
		<member>"Section"</member>
		<member>"TopOffset"</member>
		<member>"BottomOffset"</member>
		<member>"Depth"</member>
		<member>"ImageLength"</member>
		<member>"Image Source URL"</member>
		</simplelist>
		
        The "TopOffset" and "BottomOffset" columns are not currently used,
        so any placeholder value (e.g. 0.0) is acceptable.
      </para>

      <para>
        Select the section(s) to be loaded, then click on the "Load selected section"
		button to begin downloading and loading section images into Corelyzer.

        <figure>
          <title>Select load section list in IODP menu</title>
          <graphic fileref="images/iodplist-menu.png" />
        </figure>

        <figure>
          <title>Select sections and load images</title>
          <graphic fileref="images/iodplist-sectionlist.png" />
        </figure>
      </para>
    </sect1>
    <sect1>
      <title>Load FMS images from IODP-USIO logging database</title>
      <para>
        The Integrated Ocean Drilling Program, United States
        Implementing Organization provides the logging database
        accessing service described in the <ulink
        url="http://brg.ldeo.columbia.edu/services/">webpage</ulink>.
        The service serves not only numerical data but also some
        <ulink
            url="http://www.ldeo.columbia.edu/BRG/ODP/LOGGING/TOOLS/fms.html">Formation
        MicroScanner (FMS)</ulink> represented in image form stored in
        GIF format.
      </para>

      <para>
        To load FMS images from the IODP-USIO logging database, select
        the "IODP" meun item from the "File" menu and then select
        "Show IODP lists...". Then clicking on the "Logging DB" tab in
        the popup window as shown in the following figure.

        <figure>
          <title>Logging DB tab in IODP tables window</title>
          <graphic fileref="images/iodp-loggingdb.png" />
        </figure>
      </para>

      <para>
        Depending on where you're running Corelyzer, you can choose
        to access the on-ship version or the Internet version of the
        service. The on-ship version will use the service provider URL
        "<ulink
        url="http://load.ship.iodp.tamu.edu/services/">http://loa.ship.iodp.tamu.edu/services/</ulink>"
        and the Internet
        version will use the service provider URL
        "<ulink
        url="http://brg.ldeo.columbia.edu/services/">http://brg.ldeo.columbia.edu/</ulink>". Once
        the service provider is
        selected, the available site and tool options will be
        downloaded and populated in the selectable combobox
        options. Or you can also type in interested site and tool and
        then click on the "Search" button to search for available
        data. The search result will be shown in the table rows
        below. You can use mouse to highlight multiple rows and click
        on the "Load selected data files" button to download and load
        the data/image files.
      </para>

      <para>
        For FMS images, since the depth and length information is not
        directly available, Corelyzer will attempt to load these
        images by guessing from their file name. For example a FMS
        image file named "306-642E_p2_D_372_442.gif" will be parsed
        and implies that the FMS image will contain data from 372 to
        442 meters. Corelyzer will use these two values to determine the
        depth and length of the interval of interest. Be aware that the
		FMS images are not cropped to the exact
        range, and there are white space form borders around the
        image, so the estimation may not be accurate. Image properties
        can be fine-tuned in the Properties dialog, opened by right-clicking
		a section image and choosing "Properties...".
      </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/LoadFromLoggingDB.mov">link
        online (size: 6MB in 1920x1200 resolution)</ulink>.
      </para>
    </sect1> -->

  </chapter>

  <chapter>
    <title>Load and Plot Numerical Log Data</title>

    Log and sensor measurement data can be plotted alongside core imagery. When
    provided with some basic parameters, Corelyzer can import data from comma-,
    semicolon-, tab-, and/or space-separated value files. XML data that's already in the Corelyzer
    format can be quickly loaded without additional input.

    A Corelyzer-specific XML file will be generated when importing non-XML formats.

    <sect1 id="sec.convertTabularData">
      <title>Convert Tabular Data to XML</title>

      <para>
        The Convert Tabular Data dialog allows you to flexibly import tabular data
        such as a CSV (.csv, comma or
        semicolon-separated values), TSV (.tsv, tab-separated values), text file (usually
        .txt with space-separated values), or Geotek generated data (after pre-processing
        and data cleaning) and convert it to Corelyzer's XML format.
      </para>

      <para>
        Your tabular data should contain one or more numeric data columns, a column with depths,
        and one or more columns identifying the core section from which the data was collected.
        Conversion will be easiest if the core section identity is in a single column. However, it
        is possible to combine components of a core section identity from multiple columns if needed.
      </para>

      <para>
        CSV is the format most commonly imported with Convert Tabular Data.
        If your data is in Excel (.xls or .xlsx) format, it can
        be converted to CSV with Excel's File > Save As... option and selecting the 
        "CSV" (Comma-separated Values, or Comma-delimited values) file format.
      </para>

      <para>
        After selecting a file to convert, you'll provide the Convert Tabular Data dialog with the
        parameters of your data to ensure it is converted to the Corelyzer XML format correctly and completely.
      </para>

      <sect2>
        <title>Opening the Convert Tabular Data Dialog</title>
        <para>
            Select the File > Load Data > Convert Tabular Data to XML... menu item.
            Then select the data file to be imported.
        </para>
      </sect2>

      <sect2>
        <title>Using the Convert Tabular Data Dialog</title>
        <para>
          The first page of the dialog, Import Parameters, is divided into three main panels.
          The functions of each panel are described below.
        </para>

        <figure>
          <title>Convert Tabular Data, Import Parameters page</title>
          <graphic fileref="images/convertTabular-params.png" />
        </figure>

        <para>
          File Import Parameters:
          <itemizedlist>
            <listitem>
              <para>
                Selected File: selected input file name. Use the "Select..." button
                to select a different input file.
              </para>
            </listitem>

            <listitem>
              <para>
                Field Delimiter:
                The character used to separate the components of each line in the input
                file. Available separators are comma (,) or semicolon (;) for CSV
                files, tab for TSV files, or space for raw text files. The initially
                selected character is based on the input file name's extension:
                comma for .csv, tab for .tsv, and space for .txt. For other extensions,
                comma is the default.
              </para>
              <para>
                When the selected character
                is changed, the table of data in the File Content area will be updated
                to reflect how each line is separated into components.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        
        <para>
          Data Import Parameters:
          <para>
            Using the row and column numbers in the File Content area, enter appropriate
            values into these controls to import your data correctly and completely.
          </para>
          <itemizedlist>
            <listitem>
              <para>
                Data Start Row:
                The row with the first line of data values to be imported.
              </para>
            </listitem>

            <listitem>
              <para>
                Data End Row:
                The row with the last line of data values to be imported.
                Initially set to the last line of the input file.
                All rows from Data Start Row to Data End Row will be imported.
              </para>
            </listitem>

            <listitem>
              <para>
                Fields Row:
                The row with labels/fields for each data column.
              </para>
            </listitem>

            <listitem>
              <para>
                Units Row:
                If the input file has a separate row for units, check the
                Units Row checkbox and enter the units row number.
                If there's no units row, uncheck the checkbox.
              </para>
            </listitem>

            <listitem>
              <para>
                Depth Column:
                The column with depth values for each measurement.
              </para>
              <para>
                If a units row is defined, the values in the depth column will use the
                provided unit for the depth column. The following units
                are recgonized by Corelyzer: mm, cm, m, in, ft, yd.
                If no units row is defined, or the depth column unit is
                blank or not recognized, meters will be used.
              </para>
            </listitem>
            
            <listitem>
              <para>
                Depth Mode:
                <itemizedlist>
                  <listitem>
                    Section Depth: the depths in the Depth Column are relative to each section.
                  </listitem>
                  <listitem>
                    Accumulated Depth: the depths in the Depth Column are total depth.
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                Section Name Column:
                The column containing full section names. <emphasis>These names must match
                the corresponding section images' names exactly for data to be plotted correctly.</emphasis>
              </para>
              <para>
                If your data does not have a single column with full section names, you can combine
                section name components by entering a comma-separated expression in the Section Name Column
                field. <link linkend="sec.customSectionName">The format and use of custom section name
                expressions is described in detail here.</link>
              </para>
            </listitem>
            <listitem>
              <para id="para.sectionNamePreview">
                Section Name Preview:
                Displays the text in the Data Start Row of the Section Name Column.
                Used to confirm the Section Name Column number (or expression)
                you entered results in the expected section name.
                "[can't create preview]" will be displayed if the Data Start Row or
                Section Name Column are invalid or blank.
              </para>
            </listitem>
            <listitem>
              <para>
                Value to Ignore: a single value to be ignored when data is imported. Typically this
                would be a placeholder indicating invalid data like "9999" or "BOGUS".
              </para>
            </listitem>

          </itemizedlist>
        </para>
        <para>
          File Content:
          <para>
            The contents of the Selected File are displayed here, separated into columns based on the selected
            Field Delimiter character. Rows and Columns are numbered. Enter the appropriate row and column numbers
            into the Data Import Parameters controls to import your data correctly and completely.
          </para>
        </para>

        <para>When you've finished entering parameters, click the Next button to move to the next page, Fields Selection.</para>
        <figure>
          <title>Convert Tabular Data, Fields Selection page</title>
          <graphic fileref="images/convertTabular-fields.png" />
        </figure>

        <para>
          The upper portion of this page contains a list of the columns in your tabular data.
          The column names are based on the Fields Row specified in the Import Parameters page.
          To return to the Import Parameters page to make a correction, click either the Import
          Parameters tab atop the dialog, or the Back button at bottom-center.
        </para>          

        <para>
          Each column name
          has a checkbox to its left. Check the box corresponding to each data column to be converted. 
          The Section Name Column(s) and Depth Column you specified in the Import Parameters page do
          not need to be checked; they're included automatically. You only need to check columns containing
          data to be plotted. To simultaneously check a range of columns, you can Shift-click (hold the Shift
          key while clicking an item in the list).
        </para>
        <para>
          Once all data columns to be imported have been checked, click the Finish button.
        </para>
        <para>
          You'll be prompted to choose a name and location to save the generated XML file. It's generally best to
          save this file alongside your imported core section images and other project-related files. Once the file
          is saved, it will automatically be loaded into the current session. You can now plot this data on your
          core section images with <link linkend="sec.graphing">the Graph dialog</link>.
        </para>
      </sect2>
      
      <!-- 5/3/2020 directing to video tutorials instead -->
      <!-- <sect2>
        <title>A step-by-step walkthrough example</title>
        <para>
          Next is a step by step walkthrough example. The example source
          data file is downloaded from <ulink
          url="http://iodp.ldeo.columbia.edu/DATA/">IODP Log database
          at Lamont-Doherty Earth Observatory, Columbia
          University</ulink>. The data file used in
          this example is <ulink url="attachments/763B-ngt.dat">763B-ngt.dat</ulink>. The
          resulting Corelyzer dataset file is <ulink
          url="attachments/764B-ngt.xml">output_data.xml</ulink>.
        </para>

        <para>
          Select the "Convert Tabular Data" from the "File" menu.

          <figure>
            <title>Select "Convert Tabular Data"</title>
            <graphic fileref="images/dataimport-1.png" />
          </figure>
        </para>

        <para>
          The selected file will be loaded into "Plain Text Data
          Import" dialog. The upper half of the dialog shows different
          data format parameters in tabs. The lower half shows the
          content of the text file with line number attached to the
          beginning of each line.
        </para>

        <para>
          In the "File Info" tab, the selected file will be shown and
          you have to select from one of the available separator
          (comma, tab or space). In the this example, tab separator is
          selected.

          <figure>
            <title>Data import - file info</title>
            <graphic fileref="images/dataimport-2.png" />
          </figure>
        </para>

        <para>
          Because some text files will have certain number of comments
          lines in the header to describe the data file. In the "Data
          Range" tab, you can specify the actual data line
          range. Notice that the first number in each in the lower
          "File Content" panel shows the line number starting from
          one. In this example, the actual data starts from 6th line
          till the very end of the file (line 1586). In some
          equipments, bad or invalid values will be recorded during
          data acquisition with some fixed numbers like -999.99. 
          If you want to ignore these bad values,
          check the "Ignore some bad values?" checkbox and type in the
          designated value.

          <figure>
            <title>Data range tab</title>
            <graphic fileref="images/dataimport-3.png" />
          </figure>
        </para>

        <para>
          Next, you need to specify the lines showing the labels for
          fields and units. If the data file does not have the unit
          label line, just select the same line as the field label. In
          this example 5th line shows the labels for data fields.

          <figure>
            <title>Field and Unit Labels</title>
            <graphic fileref="images/dataimport-4.png" />
          </figure>
        </para>

        <para>
          Next, depth information parameters have to be specified. You
          have to specify which column means depth. In this example,
          the depth is in the first column.
        </para>

        <para>
          In the "Depth Mode" selection, you can select from either
          "Section Depth" or "Accumulated Depth". "Section Depth" means
          the depth values are measured from the beginning of each
          section that the data are acquired from. "Accumulated Depth"
          means the depth is measured from the bottom of the sea/lake
          floor.
        </para>

        <para>
          Because internally Corelyzer arranges depth values into
          sections, it in one way fits how certain parties obtain the
          data from sections of cores. In the other way, it helps
          renderning performance. So if the "Customize Section Name"
          is not checked, the data will be put into sections suffixed
          with section numbers automatically. If your data files has
          section information embedded (like data files from LacCore
          repository), or you have your own section naming convension,
          you can customize your section names with "Section Prefix"
          and "Name Column Number".
        </para>

        <para>
          For example, if you have a data file looks like this:

          <programlisting>
Geotek MSCL Version 3.0 - GLAD4-HST03-1A.OUT created at 12:37:15 on 08-21-2003.,,,,,,,,,
...
SB DEPTH  ,SECT NUM  ,SECT DEPTH,ST        ,PWAmp     ,PWVel     ,Den1      ,MS1       ,Imp       ,FP        
m         ,          ,cm        ,cm        ,          ,m/s       ,gm/cc     ,SI        ,          ,          
0.06,1H-1,6,6.605,50,130.9347,1.2618,82.5908,165.2135,0.8632
0.07,1H-1,7,6.605,50,131.1427,1.1873,89.2873,155.7109,0.9064
0.08,1H-1,8,6.605,50,130.9736,1.2688,95.0648,166.1739,0.8592
...
2.41,1H-2,92,6.604,50,130.9019,1.5467,152.7585,202.4669,0.698
2.42,1H-2,93,6.604,50,131.1098,1.5654,152.2331,205.2369,0.6871
2.43,1H-2,94,6.604,50,130.9408,1.6787,148.03,219.8154,0.6214
...
4.41,2H-2,20,6.605,50,5436.214,1.9546,271.8012,10625.5,0.4614
4.42,2H-2,21,6.605,50,130.9477,2.0751,287.0326,271.7301,0.3915
4.43,2H-2,22,6.606,50,130.9545,1.9434,300.9818,254.4949,0.4679
...
          </programlisting>
          
          Each section's name can be composed by prefix
          "GLAD4-HST03-1A" with suffix from the string in the "SECT
          NUM" column. So check the "Customize Section Name" checkbox
          with "GLAD4-HST03-1A" section prefix and the number "2" in
          the "Name Column Number" will give the sections named
          "GLAD4-HST03-1A-1H-1", "GLAD4-HST03-1A-1H-2" and
          "GLAD4-HST03-1A-2H-2". Also notice that you need to use
          values from multiple columns to compose your full section
          name, you can also fill in string like, "2,-,4,-,7" to have
          values from multiple columns in the full section name
          separated by "-".

          <figure>
            <title>Depth setup</title>
            <graphic fileref="images/dataimport-5.png" />
          </figure>
        </para>

        <para>
          In the "Fields Selection" tab, you then can select the data
          field columns that you want to import into Corelyzer.

          <figure>
            <title>Fields selection</title>
            <graphic fileref="images/dataimport-6.png" />
          </figure>
        </para>

        <para>
          The data import process will then ask you to save the
          converted file (in Corelyzer native xml format) to your disk
          for future use. After saving, the data will be loaded into
          current Corelyzer session.
          
          <figure>
            <title>Save converted file</title>
            <graphic fileref="images/dataimport-7.png" />
          </figure>
        </para>

        <para>
          Notice that just like core images, data plots have to belong
          to a track grouping. So if you haven't have a track created
          or you want to have dedicated track grouping for data graph
          plots, create a new track from the "File" menu.

          <figure>
            <title>Create a track for data graph plot</title>
            <graphic fileref="images/dataimport-8.png"/>
          </figure>
        </para>

      <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/6.3-LoadCustomData.mov">link
        online (size: 6.7MB)</ulink>.
      </para>

      </sect2> -->

    </sect1>

    <sect1>
      <title>Open XML Data Files</title>
      <para>
        If you have existing Corelyzer-formatted XML data files, they can be added to the current
        session.
      </para>

      <para>
        To begin, select the File > Load Data > Open XML Data Files... menu item,
        then select one or more XML files to load.
      </para>

      <para>
        After a data file(s) is selected, Corelyzer will
        update the Data Files list in the session window. Corelyzer-formatted XML data
        files can contain multiple fields. You can click on a filename in the Data Files
        list to view the fields/datatypes included in that file.
      </para>
    </sect1>


    <sect1 id="sec.graphing">
      <title>Plot Data</title>
      <para>
        Once core section image tracks and data files are loaded, the
        session window should resemble that pictured below. To plot data
        above the core images, right-click on the desired data file and choose
        "Graph...". This will open the Graph dialog.
        <figure>
          <title>Main window with dataset loaded; right-click Data File to open Graph dialog</title>
          <graphic fileref="images/dataplot-1.png" />
        </figure>
		
        Alternately, you can right-click a section image in the visualization canvas and choose
        "Graph..." from the menu as seen below:
		
		    <figure>
          <title>Opening graph dialog by right-clicking section image</title>
          <graphic fileref="images/dataplot-1.1.png" />
        </figure>
		
		    <figure>
          <title>Graph dialog</title>
          <graphic fileref="images/dataplot-2.png" />
        </figure>

        Select one or more sections and the available data
        fields will be shown in the "Properties fields" list. Checking a
        field's checkbox in the "Show" column will plot that data in the main
        visualization area. To change the color of plotted data, click the field's
        color cell and select from the resulting palette. Corelyzer attempts to use
        the same color across all sections for fields of the same name. The "Data
        Range" column indicates the min/max range of data across all selected sections.
    	</para>
	
      <para>
        Other controls:
      </para>
      <para>
            <itemizedlist>
              <listitem><para>Graph type: Change apperance of graph (points, lines, etc.).</para></listitem>
              <listitem><para>Collapse graphs: 	When checked, all selected data fields will be
          plotted on a single coordinate plane for each section (see example below).</para></listitem>
              <listitem><para>Scale min/max: Change the minimum and maximum range of the coordinate plane.</para></listitem>
              <listitem><para>Excluded values: When populated, don't graph datapoints that fall within
            the excluded range. One or both fields can be filled. When multiple sections are
            selected, the broadest exclusion range will be displayed (that is, the minimum of
            minimums and maximum of maximums).</para></listitem>
          <listitem><para>Leave gaps at excluded values: When checked, the Line and Line &amp; Points graph
          types will not draw a line connecting points with excluded values between them.</para></listitem>
            </itemizedlist>
      </para>

      <figure>
        <title>Graph plot with Collapse graphs enabled</title>
        <graphic fileref="images/dataplot-3.png" />
      </figure>

      <para>
        Keyboard Commands:
      </para>
      <para>
        In some cases, you may want to expand the vertical size of
            graph plots, e.g. those with a large depth range. To increase
        or decrease the graph (vertical) scale, you
            can first click on the visualization canvas area, and then
            press '[' or ']' to decrease or increase the graph's size
            on-screen.
        
            <!-- A screen capture video of these actions can be found in this
            <ulink url="http://www.corewall.org/documents/movies/6.4-GraphParameters.mov">link
            online (size: 2.0MB)</ulink> -->
      </para>

      <sect2>
        <title>Unmatched image section name and data section name</title>
        <para>
          In order to plot data on a core section image, the section name in the data must match
          the section image's name <emphasis>exactly</emphasis>. Otherwise, no data will be plotted.
        </para>
        <para>
          To help identify this problem, the Graph dialog informs you when sections
          in the data have no matching image section in the session. This can be corrected
          by <link linkend="sec.convertTabularData"> re-converting your tabular data</link>,
          ensuring that the data's section names match the corresponding section image names.
        </para>
        <figure>
          <title>Unmatched data sections warning, unmatched sections in red</title>
          <graphic fileref="images/dataplot-unmatchedSections.png" />
        </figure>
      </sect2>
    </sect1>
  </chapter>

  <chapter>
    <title>Interactions</title>

    <sect1>
      <title>Interaction Scheme</title>
      <para>
        Corelyzer is primarily controlled via mouse, ideally
        a two-button mouse with a scroll wheel. Mouse clicks
        and events are context sensitive. That is, depending on what
        you're clicking (e.g. an image), corresponding menus and/or options
        will appear.
      </para>

      <sect2>
        <title>Panning</title>
        <para>
          To pan the visualization canvas, left-click and drag, making sure not to
          click on any objects like core section images, graphs, or
          annotation markers.
        </para>
      </sect2>

      <sect2>
        <title>Zooming</title>
        <para>
          If your mouse has a scroll wheel, scroll forward
          to zoom out, and backwards to zoom in. Zooming will center
          on the mouse cursor's current location.
        </para>
        <para>
          If your mouse does not have a scroll wheel, you can zoom by
          left-clicking and dragging up and down while holding the Control key.
        </para>

        <para>
          You can also use keyboard for navigation in Corelyzer. You
          can use the four-direction arrow key to pan around the main
          visualization area. To zoom in and out around the mouse
          cursor position, you can press the "+" and "-" keys. If you
          want to jump to a certain depth directly, first click on the
          main visualization area and then press the "j" key to bring
          up the "Jump to..." dialog. Input the depth in meter and the
          main visualization area will jump to designated depth
          directly.

          <figure>
            <title>Jump to depth dialog</title>
            <graphic fileref="images/jumpto.png" />
          </figure>

        </para>
      </sect2>

      <sect2>
        <title>Moving a section</title>
        <para>
          To move a section image stratigraphically, first left-click on the section image.
          The image will be highlighted by a yellow bounding box. The 
          image will also be drawn on top of any overlapping images.
          While holding the Alt key, left-click and drag left or right to move
          the section image left or right.
        </para>
      </sect2>

      <sect2>
        <title>Moving a track</title>
        <para>
          A track can be moved vertically. To do so, left-click a section
          image in the track to be moved. While holding the Shift key, left-click
          and drag up or down. All core sections in the track will move to follow.
        </para>
      </sect2>
    </sect1>

    <sect1>
      <title>Manipulating Tracks and Sections</title>
      <para>
        Right-clicking on a section image opens a menu with several options to modify the
        appearance of the section (or its parent track), properties, and positioning relative
        to other sections within its track.
		    <figure>
           <title>Section context menu</title>
           <graphic fileref="images/sectionMenu.png" />
         </figure>
	  </para>

		<sect2><title>Lock Section</title>
		  If checked, section cannot be moved up or down stratigraphically. Select
			this option to lock/unlock the section.
		</sect2>
		
		<sect2><title>Lock Section Graphs</title>
		  If checked, graphs of section data cannot be moved up or down stratigraphically (this
			is the default). Select this option to lock/unlock the section's graphs.
		</sect2>

		<sect2><title>Graph...</title>
			Opens the Graph dialog - <link linkend="sec.graphing">details here</link>.
		</sect2>

		<sect2><title>Split...</title>
			Opens the Split dialog, where you can divide the selected section into separate sections.
		</sect2>

		<sect2><title>Properties...</title>
			Opens the Properties dialog, where you can modify traits (resolution, visible interval, rotation, etc.)
			of the selected section.
		</sect2>

		<sect2><title>Delete...</title>
			Removes this section from the current session.
		</sect2>

		<sect2><title>Stagger Sections</title>
			Moves every other section in the track up by the width of the track. This is useful for displaying
      the ends of sections if adjacent sections overlap. When a track is staggered, a checkmark
      will appear by the "Stagger Sections..." menu option; select again to un-stagger.
		  <figure>
			   <title>Staggering sections</title>
			   <graphic fileref="images/stagger.png" />
			 </figure>
		</sect2>
		
		<sect2><title>Trim Sections...</title>
      Opens the Trim dialog, which allows you to "trim" from the top or bottom of either the
      selected section image, or the selected section and all deeper sections
      in the track. Trimming modifies sections' Visible Intervals, as seen in the Properties dialog.
      This is most useful for hiding extraneous imagery such as color cards or core catchers.
		</sect2>
	
		<sect2><title>Stack Sections</title>
			Positions all sections currently below the selected section end-to-end, with no gaps between.
			Note that this operation is not section order aware. Sections will be stacked as they are
      encountered, starting from the topmost section and moving downward.
			<figure>
				<title>Stacking sections</title>
				<graphic fileref="images/stack.png" />
			</figure>
		</sect2>
    </sect1>
  </chapter>

  <chapter>
    <title>Annotation</title>
    <para>
      Annotations are currently shown using a marker along the top of
      a core. The marker is a simple interactive visual to indicate
      that an annotation exists. Different markers indicate different
      types of annotations.
      <figure>
        <title>Annotations for core images</title>
        <graphic fileref="images/annotations.png" />
      </figure>
    </para>

    <sect1>
      <title>Creating new annotations</title>
      <para>
        Currently, text and image annotations are
        supported. Annotations come in the form of HTML and property
        list XML files.
      </para>

      <para>
        First an image must be loaded. A user can then select "Create
        annotation mode" to start creating annotations.
        <figure>
          <title>Select create annotation mode</title>
          <graphic fileref="images/annotations-1.png" />
        </figure>
      </para>

      <para>
        Once you are in creating annotation mode, you can create a
        region of interest rectangle by pressing-and-dragging to show
        interested region. A dialog asking for which kind of
        annotation you are creating will show up once you release the
        the mouse button. Currently Corelyzer supports the following
        types of annotations.

        <itemizedlist>
          <listitem><para>Freefrom: a threaded discussion freeform annotation.</para></listitem>
          <listitem><para>Clast: a structured annotation which keeps
          track of clastology information.</para></listitem>
          <listitem><para>Sample Request: a front-end annotation for
          sample requests.</para></listitem>
          <listitem><para>Property Values: a generic property-value
          pairs annotation. Default properties is defined in the
          dictionary file specified in the preferences panel.</para></listitem>
        </itemizedlist>

        <figure>
          <title>Select annotation type</title>
          <graphic fileref="images/annotations-2.png" />
        </figure>

      </para>
    </sect1>

    <sect1>
      <title>Reviewing and editing existing annotations</title>
      <para>
        After an annotation is created, it can be edited in the
        future. To edit an annotation, or review it, a user simply
        clicks on an annotation marker. The same dialog used when
        creating an annotation will display.
      </para>

      <para>
        Currently, the comments will be
        attached into a discussion thread-like display in a freeform
        annotation. By clicking the tool buttons at the top of the
        editing area of annotation window, the user can do simple HTML
        formatting and insert images and attachment files with URLs or
        by selecting files from local hard disk.

        <figure>
          <title>Review and edit a freeform annotation</title>
          <graphic fileref="images/annotations-3.png" />
        </figure>
      </para>

      <para>
        Any time after the marker is created, the user can change to
        marker manipulation mode by clicking icon at the toolbox in the
        upper left screen. Next, select the marker icon and then by
        click-and-drag the green box to change the region of interest.

        <figure>
          <title>Modify annotation marker mode</title>
          <graphic fileref="images/annotations-4.png" />
        </figure>

        <figure>
          <title>Modify region of interest and marker position</title>
          <graphic fileref="images/annotations-5.png" />
        </figure>

      </para>

      <!-- <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/8.1-CreateModAnnotation.mov">link
        online (size: 14.0MB)</ulink>.
      </para> -->

    </sect1>

    <sect1>
      <title>Measuring Mode</title>
      <para>
        Switch to measuring mode by click the measurement icon in the
        toolbox at the upper left corner. To measure, click two points
        on the visualization screen, the physical length measurement
        will be calculated and saved to measuring history. The last
        value will also be copied to system’s clipboard so you can
        easily paste to other applications or the annotation.

        <figure>
          <title>Enable measure mode</title>
          <graphic fileref="images/measure-1.png" />
        </figure>

        <figure>
          <title>Show measuring history</title>
          <graphic fileref="images/measure-2.png" />
        </figure>

        <figure>
          <title>Measure on images</title>
          <graphic fileref="images/measure-3.png" />
        </figure>
      </para>

      <!-- <para>
        A screen capture video of these actions can be found in this
        <ulink
            url="http://www.evl.uic.edu/cavern/corewall/documents/movies/8.3-Measure.move">link
        online (size: 5.7MB)</ulink>.
      </para> -->

    </sect1>

  </chapter>

  <chapter>
    <title>Save, Load, and Share Sessions</title>
    <sect1>
      <title>Save and Load Sessions on the Local Machine</title>
      <para>
        <emphasis>It is critical to understand that a saved session file
        does not include images and dataset files.</emphasis>
        Rather, it saves the <emphasis>locations</emphasis> of those files on the local machine
        so they can be loaded along with the session. This means a session file
        will only function on the local machine where it was created!
      </para>

      <para>
        You can save your current session by selecting the File > Save
        Session or File > Save Session as... menu item. This saves the session as a XML-based
        CML (for "Core Modeling Language") file. The complete CML file schema description can be found
        <ulink url="attachments/CmlXml_Syntax.pdf">here</ulink>.
      </para>

      <para>
        A saved session can be loaded with the File > Open Session... menu item.
      </para>

      <para>
        To copy a complete Corelyzer session to another machine or share with a colleague,
        use the <link linkend="sec.coreArchive">Core Archive</link> function, which creates
        a single file containing all resources (images, data files, etc.) suitable for
        transfer to other machines.
      </para>
    </sect1>

    <sect1 id="sec.coreArchive">
      <title>Transfer Sessions with Core Archives</title>
      <sect2>
        <title>Export a Core Archive</title>
          <para>
            The Core Archive Export function packs
            all the resources along with a session CML file into
            a compressed "Core ARchive", a ".car" file. It will contain
            all the images, datasets, annotations and their attachments.
          </para>
          <para>
            To transfer a complete Corelyzer project to another machine,
            use the File > Core Archive > Export... menu item.
          </para>
          <para>
            Enter a name for the project.
            <figure>
              <title>Name the project for export</title>
              <graphic fileref="images/coreArchive-export1.png" />
            </figure>
            Choose a name and location for the exported .car file.
            <figure>
              <title>Choose name and destination</title>
              <graphic fileref="images/coreArchive-export2.png" />
            </figure>
            The progress bar of the session window will fill as the archive is exported,
            followed by a success message.
            <figure>
              <title>Success!</title>
              <graphic fileref="images/coreArchive-export3.png" />
            </figure>
            The exported .car file can be transfered to other machines and shared with colleagues.
          </para>
      </sect2>
      <sect2>
      <title>Import a Core Archive</title>
        <para>
          To import a core archive on the destination machine, use the
          File > Core Archive > Import... menu item.
        </para>
        <para>
          Select the .car file when prompted.
          <figure>
            <title>Select the .car file to import</title>
            <graphic fileref="images/coreArchive-import1.png" />
          </figure>
          Corelyzer will extract its contents and load them into the current session.
        </para>
      </sect2>
    </sect1>
  </chapter>

  <!-- <chapter>
    <title>Corelyzer server and plugin clients</title>
    <para>
      Corelyzer server and plugin support was developed by Arun Rao,
      Yu-Chung "Julian" Chen and Sangyoon "James" Lee in 2006 for
      supporting ANDRILL MIS Project.
    </para>

    <sect1>
      <title>Server setup</title>
      <para>
        Before starting the server, a few things must be prepared.
        First, the machine will need to have the Java Runtime
        Environment (JRE) 1.5 or greater.  Second, a web-server must
        be running.  Third, configuration files will need to be made.
      </para>

      <para>
        Setting up the JRE and a web-server are beyond the scope of
        this document, but many resources are available on the Web to
        do so.
      </para>

      <para>
        The server program requires two files.  The first file
        contains the server settings and is specifically named
        “server-settings.txt”.  This file contains only four lines and
        are as follows:
      </para>

      <programlisting>
        &lt;the base web address for all annotation pages&gt;
	&lt;the directory where the annotations are placed in the server for access&gt;
	&lt;the directory where the annotations are backed-up to&gt;
	&lt;the last time that the server performed a backup&gt;
        &lt;"backenabled" or "backupdisabled" to enable or disable data  backups&gt;
      </programlisting>

      <para>
        Here is an example of that file:
      </para>

      <programlisting>
	http://131.193.77.222/~corewallDB/annotations
        /Users/corewallDB/Sites/annotations
        /Users/corewallDB/Sites/annotations
        1155613264194
        backupenabled
      </programlisting>

      <para>
        NOTE: The second last line should be 0 when first starting the
        server.  After which the server will automatically update that
        line every day.
      </para>

      <para>
        The second file needed by the server is named “users.txt.”
        This file contains a listing of tuples that identifies a
        unique user.  The tuple is (user name, real name,
        password). The first three lines of the file describe the user
        name, real name and password for the administrator of the
        server. 
      </para>

      <para>
        NOTE: It should be stated that permissions to this file should
        be setup so that only the administrator has read and write
        permissions to the file.          
      </para>

      <para>
        An example of the file can be as follows:
      </para>

      <programlisting>
admin
administrator
admin
arun
Arun G. Rao
melodr@mat1c
jason
Jason Leigh
th3bo55
      </programlisting>

      <para>
        Anytime a new user is going to be created, it is as easy as
        adding the user name, real name and password to the end of the
        file.
      </para>

    </sect1>

    <sect1>
      <title>Running the server</title>
      <para>
        To run the server you will need to perform the following
        command:
      </para>

      <programlisting>
        java –cp CorelyzerSessionServer.jar corelyzer.plugin.andrill.CorelyzerSessionServer
      </programlisting>

      <para>
        After running that command you can logout of the server
        machine and the server program will continue to run.  To
        properly shutdown the server, use the “server-shutdown”
        command available to the admin client.
      </para>
    </sect1>

    <sect1>
      <title>Running the administration client</title>
      <para>
        You can run the admin client from anywhere.  Simply have the
        JRE 1.5 or greater and keep a copy of the
        CorelyzerSessionServer.jar file.  To run the client simply run
        the command:
      </para>

      <programlisting>
	java –cp CorelyzerSessionServer.jar corelyzer.plugin.andrill.CorelyzerSessionAdminClient 192.168.1.1
      </programlisting>

      <para>
        Where you would replace the I.P. 192.168.1.1 with the proper
        hostname or IP of the machine running the server.  Following
        is a detailed look at the set of administrator commands.
      </para>
    </sect1>

    <sect1>
      <title>Administrator commands</title>
      <para>
        <itemizedlist>

          <listitem>
            <para>
              Command: "new-section". Arguments: "Section name", "Starting depth" in
              meters" and "Length in meters".
            </para>

            <para>
              Purpose: The main purpose of the command is to notify to
              the server that a new core sections exists.  Effectively
              creating empty slots of split-core image and whole-core
              image entries.  This is also used so that when a new
              data comes in, there are correlations to depth intervals
              and section names.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "new-missing-section". Arguments: "Section name
              prefix", "Starting depth in meters" and "Length in meters".
            </para>

            <para>
              Purpose: The main purpose of the command is to notify to
              the server that a new missing core sections exists.
              Effectively creating empty slots of split-core image and
              whole-core image entries.  Using command like
              “new-missing-section and001 0.0 1.5” will create a new
              section with section name “and001_0.0-1.5-missing”.
            </para>
          </listitem>
          <listitem>
            <para>
              Command: "new-split-core". Arguments: "The URL to the
              image file", "The name of the section the image comes
              from", "The DPI (dots-per-inch) of the image in X
              (horizontal) direction" and (Optional) "The DPI of the
              image in Y (vertical) direction"
            </para>

            <para>
              Purpose: The purpose of this command is to let the
              server know the web address of the split-core image that
              was created from the core section.  This will let the
              server then notify the clients that the image exists and
              is available for download and viewing in Corelyzer.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "new-missing-split-core". Arguments: "The section name of missing split core"
            </para>

            <para>
              Purpose: The purpose of this command is to assign a
              empty split core image to a core section due to there
              might be no split core image available but users still
              need to access the data and whole core images. The
              missing section name convention will be like
              &lt;prefix&gt;_&lt;start_depth&gt;-&lt;end_depth&gt;, eg:
              “and001_186.7-187.5”.
            </para>
          </listitem>
          <listitem>
            <para>
              Command: "new-whole-core". Arguments: "The URL to the
              image file", "The name of the section the image comes
              from" and "The DPI (dots-per-inch) of the image".

            </para>
            <para>
              Purpose: The purpose of this command is to let the
              server know the web address of the whole-core image that
              was created from the core section.  This will let the
              server then notify the clients that the image exists and
              is available for download and viewing in Corelyzer.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "new-dataset". Arguments: "Data file to parse"
              and "The name of the dataset to append/overwrite".
            </para>

            <para>
              Purpose: This command will parse a tab-delimited data
              file and feed the server new data tables.  The tab
              delimited data file must follow the formatting exampled
              in Appendix B.  This command will retrieve a listing of
              sections to use the depth and length of the sections to
              determine how to partition the data file into tables.  
            </para>
            <para>
              Once the tables are created the tables are sent to the
              server and stored in a file with the following name
              convention:
            </para>
            
            <programlisting>
              dataset.&lt;section name&gt;.&lt;dataset name&gt;.tab
            </programlisting>

            <para>
              If the dataset name does not exist in the server, it
              will be created automatically.  If the name exists then
              the files created on the server will automatically be
              appended.
            </para>

            <para>
              NOTE: Existing files will be overwritten automatically!
              If this is an undesired effect, please make sure that
              there are no rows that contain depths of sections that
              would previously had a table made for them for the
              dataset.  If you are only appending to a single
              tab-delimited file without changing previous rows then
              the overwrite will effectively be doing nothing for
              previously created tables.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-sections". Arguments: None
            </para>

            <para>
              Purpose: The purpose of this command is to list the
              existing sections known to the server.  Returned is a
              listing of section names, their depth and length in
              meters.  The output is displayed to the command-line.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-datasets". Arugments: None
            </para>

            <para>
              Purpose: The purpose of this command is to display
              datasets known to the server.  Displayed are the names
              of the datasets followed by the attributes in the
              dataset and their respective minimum and maximum values
              within the whole dataset.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-tables". Arguments: "The name of the
              dataset"
            </para>

            <para>
              Purpose: This command will display a listing of tables
              within a given dataset.  This is useful if you do not
              know if a given section is covered by a dataset because
              the names of the tables are the names of the sections.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "list-table-data". Arguments: "The name of the
              dataset" and "The name of the section/table to view"
            </para>

            <para>
              Purpose: This command will display the data of a table
              from a given dataset.  The data is displayed in a
              tab-delimited form with the first line as the header
              followed by lines of numerical values.  Table cells that
              are invalid will appear blank.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "run-backup". Arguments:	None
            </para>

            <para>
              Purpose: The server runs backups automatically if the
              last backup has occurred more than 24 hours ago.  This
              command forces the current day’s backup to occur.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "logout". Arguments: None
            </para>

            <para>
              Purpose: This command allows the administrator to logout
              and ends the client program.
            </para>
          </listitem>

          <listitem>
            <para>
              Command: "server-shutdown". Arguments: None
            </para>

            <para>
              Purpose: This command allows the server to properly
              shutdown.
            </para>
          </listitem>

        </itemizedlist>

      </para>
    </sect1>

    <sect1>
      <title>Admin commands reference table</title>
      <table>
        <title>Commands reference table</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Command</entry>
              <entry>Arguments</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>new-section</entry>
              <entry>section_name> depth_in_mbsf length_in_meter</entry>
            </row>

            <row>
              <entry>new-split-core</entry>
              <entry>image_url section_name image_dpi</entry>
            </row>

            <row>
              <entry>new-whole-core</entry>
              <entry>image_url section_name image_dpi</entry>
            </row>

            <row>
              <entry>new-dataset</entry>
              <entry>dataset_file dataset_name</entry>
            </row>

            <row>
              <entry>list-sections</entry>
              <entry></entry>
            </row>

            <row>
              <entry>list-datasets</entry>
              <entry></entry>
            </row>

            <row>
              <entry>list-tables</entry>
              <entry>dataset_name</entry>
            </row>

            <row>
              <entry>list-table-data</entry>
              <entry>dataset_name table_name</entry>
            </row>

            <row>
              <entry>run-backup</entry>
              <entry></entry>
            </row>

            <row>
              <entry>run-script</entry>
              <entry>script_file</entry>
            </row>

            <row>
              <entry>logout</entry>
              <entry></entry>
            </row>

            <row>
              <entry>server-shutdown</entry>
              <entry></entry>
            </row>

          </tbody>
        </tgroup>
      </table>
    </sect1>

    <sect1>
      <title>Client plugin in Corelyzer</title>
      <para>
        In the client side, a client plugin is provided in Corelyzer
        software. To activate the client user interface, select
        "Collaborative Corelyzer" from the "Plugins" menu.

        <figure>
          <title>Activate client plugin</title>
          <graphic fileref="images/session-1.png" />
        </figure>
      </para>

      <para>
        To connect to the session server, you can either select or
        type in the
        server name from the drop down menu on the top of the client
        plugin user interface and click on the "Connect" button. The
        interface then will prompt to ask for the user name and
        password for accessing the server.

        <figure>
          <title>Connect to session server</title>
          <graphic fileref="images/session-2.png"/>
        </figure>
      </para>

      <para>
        After logging in, the user interface will display available
        split core and whole core section images and numerical
        datasets for plotting. To load the available images, click on
        the checkboxes in each section row. The client plugin will
        start downloading and loading the section images in the
        background and show in the main visualization canvas.

        <figure>
          <title>Main session client plugin user interface</title>
          <graphic fileref="images/session-3.png" />
        </figure>
      </para>

    </sect1>

    <sect1>
      <title>Example dataset file</title>
      <para>
	The basic formatting of this file is simple.  The first row
        will contain unique column headers that are tab-delimited
        (i.e. separated by tabs).  The first column of the data, by
        default, is assumed to be the column that contains the depth
        reference for the data in the row.  Every row of data is also
        tab-delimited, and must contain the same number of tabs as the
        header row; in order to positively determine which data value
        belongs to which column. Microsoft® Excel can export a
        worksheet as a tab-delimited file in the same way.  An empty
        entry is considered to be two consecutive tabs, and will be
        dealt with properly.  Any data that appears to be invalid
        should be deleted in your spreadsheet program of choice to
        create an empty entry.
      </para>

      <programlisting>
Depth [m]	Porosity [% vol]	WBD [g/ccm]	Sus [units]
12.250	0.454	1.937	241.46
12.270			245.60
12.290	0.420	1.995	244.68
12.310	0.408	2.015	257.45
12.330	0.365	2.087	280.15
12.350	0.387	2.050	305.97
12.370	0.383	2.057	390.86
12.390	0.434	1.971	620.38
12.410	0.282	2.226	762.53
12.430	0.376	2.069	644.55
12.450	0.441	1.959	435.98	
      </programlisting>

      <para>
        NOTE: In this example you can see that on the third row there
        are two blank entries for both Porosity and WBD columns.  
      </para>
    </sect1>

    <sect1>
      <title>Handy scripts</title>
      <table>
        <title>Handy scripts</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>Script name</entry>
              <entry>Function description</entry>
            </row>
          </thead>

          <tbody>

            <row>
              <entry>startserver.sh</entry>
              <entry>Server startup script</entry>
            </row>

            <row>
              <entry>adminlogin.sh</entry>
              <entry>Interactive administrator client startup script</entry>
            </row>

            <row>
              <entry>import_img.cron</entry>
              <entry>Sample script that can be placed in crontab to import section image summary report</entry>
            </row>

            <row>
              <entry>import_data.cron</entry>
              <entry>Sample script that can be placed in crontab to import dataset summary report</entry>
            </row>

            <row>
              <entry>img_summ</entry>
              <entry>Section image summary report example file (tab separated fields in each line)</entry>
            </row>

            <row>
              <entry>CRP</entry>
              <entry>Dataset summary report example file. Notice that
              the data’s depth must be within the range of sections
              existed in server</entry>
            </row>

          </tbody>
        </tgroup>
      </table>
    </sect1>

    <sect1>
      <title>Some notes</title>
      <itemizedlist>
        <listitem>
          <para>
            Convert raw scanned image files from BMP or TIFF to JPEG
            files, to reduce file size and save some network
            transmission time.
          </para>
        </listitem>

        <listitem>
          <para>
            The server assume the splitcore images are in ‘vertical’
            orientation and it will tell clients to rotate them so
            images will be layout horizontal way.
          </para>
        </listitem>

        <listitem>
          <para>
            Before import the dataset, make sure the data are in the
            range of sections already available in the server.
          </para>
        </listitem>
      </itemizedlist>
    </sect1>

  </chapter> -->

  <!-- <chapter>
    <title>Fine tune with Correlator</title>

    <sect1>
      <title>Before start - Download Corrlator and Corelyzer</title>
      <para>
        You have to download and install Correlator and
        Corelyzer. The latest version of Correlator can be downloaded from
        <ulink
            url="http://sqlcore.geo.umn.edu/CoreWallDatabase/cwWiki/index.php/Correlator">here</ulink>, 
        and the latest version of Corelyzer can be downloaded from 
        <ulink url="http://www.evl.uic.edu/cavern/corewall/downloads.php">here</ulink>.
      </para>
    </sect1>

    <sect1>
      <title>Interaction flow</title>
    
      <para>
        In the following section, we will show step-by-step how to
        connect to Corelyzer from Correlator to use available core
        images assisting choosing tie points in creating affine tables.
      </para>

      <sect2>
        <title>Start Corelyzer</title>
        <para>
          Double click on the Corelyzer icon to start Corelyzer. You might
          want to properly setup the visualization area of Corelyzer if
          you do not want it overlaps with Correlator's data plot
          window. Please refer to Corelyzer Display Configuration
          section for setting up Corelyzer visualization area.
        </para>
      </sect2>

      <sect2>
        <title>Start Correlator</title>
        <para>
          Double click on the Correlator icon to start
          Correlator. Please refer to Correlator documentation for start
          using Correlator.
        </para>
      </sect2>

      <sect2>
        <title>Load log data tables and image list table</title>
        <para>
          Before using the fine tune function, you have to make sure you
          have loaded both the data table and the image table of the
          cores. Please refer to Correlator document on "How to load
          data files into Correlator Data Manager".
        </para>
        
        <para>
          In the following example, 3 data files (Bulk Density GRA) and
          a image list data file are loaded into Correlator's Data Manager.
        </para>
      
        <figure>
          <title>Example data and image list files are loaded in Data
          Manager in Correlator</title>
          <graphic fileref="images/finetune-1.png" />
        </figure>

        <figure>
          <title>The log data file format loaded in Correlator</title>
          <graphic fileref="images/finetune-2.png" />
        </figure>

        <figure>
        <title>The image list file format loaded in Correlator</title>
        <graphic fileref="images/finetune-3.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Load log data into Correlator plotting area</title>
        <para>
          Right click on the log data entries and select "Load" to load
          the data into the plotting area in the Correlator.
        </para>
      
        <figure>
          <title>Right click on the data entries and click on the "Load"
          to load the log data into the plotting area of
          Correlator</title>
          <graphic fileref="images/finetune-4.png" />
        </figure>

        <para>
          The data will be plotted in the Correlator window. In the
          following screenshot, it shows a 1920x1200 screen with
          Corelyzer showing in the left half and Correlator showing the
          right half with log data loaded and plotted.
        </para>
        <figure>
          <title>Side-by-side Corelyzer and Correlator with log data
          plotted</title>
          <graphic fileref="images/finetune-5.png" />
        </figure>
      </sect2>

      <sect2>
        <title>Connect to Corelyzer from Correlator</title>
        <para>
          Click on the "Connect to Corelyzer" button on the Correlator
          command window as shown in the following screenshot.
        </para>
        <figure>
          <title>"Connect to Corelyzer" button in Correlator command
          window</title>
          <graphic fileref="images/finetune-6.png" />
        </figure>

        <para>
          A confirmation dialog will popup asking whether you want to
          unload previous loaded images in Corelyzer. Click on "YES"
          will unload previous tracks and images in Corelyzer.
        </para>

        <figure>
          <title>Confirmation of unload previously loaded images in
          Corelyzer</title>
          <graphic fileref="images/finetune-7.png" />
        </figure>

        <para>
          After successfully connected, if the user use the scrollbar in
          Correlator to change the viewing depth range, the view range
          will also be updated accordingly in the Corelyzer
          visualization area.
        </para>

      </sect2>

      <sect2>
        <title>Composite depth shifting with core images</title>
        <para>
          Core images will be loaded in the Corelyzer side, if the
          connection between Correlator and Corelyzer is established
          during choosing both 2 tie points (red and green points) in
          Correlator. A red horizontal line will appear in the
          Corelyzer as the reference tie depth.
        </para>

        <figure>
          <title>Creating 2 tie points in Correlator</title>
          <graphic fileref="images/finetune-8.png" />
        </figure>

        <para>
          Dragging the green tie point in Correlator like you always
          do, it will update/shift the core images accordingly like
          the data plots segments. You can use the core image texture
          for correlation reference.
        </para>

        <figure>
          <title>Adjusting tie points also updates core images</title>
            <graphic fileref="images/finetune-9.png" />
        </figure>

        <para>
          If you right click the (green) tie point and select the
          "Clear" option, the core images will be placed to their
          original position. After your adjustments, right click on
          the (green) tie point to choose adjustment option as
          described in Correlator
          document. The core images will be positioned using the
          result affine table. If you click on the "Undo To" button in
          the Correlator, the affine table will be restored and
          re-read by Corelyzer to shift core images according to the
          affine table.
        </para>

        <para>
          When you disconnect from Corelyzer, a dialog will popup in
          Corelyzer main window. By default selecting "YES" it will
          close all opened core images during the composite
          session. If you want to keep the arrangements setup on
          screen, you can save the session file as described in the
          "Save and Load Sessions".
        </para>
      </sect2>
      </sect1>
  </chapter> -->

  <!-- <chapter>
    <title>Frequently Asked Questions (FAQ)</title>
    
    <sect1>
      <title>How do I compare two cores?</title>
      <para>
        To compare 2 cores images or data side-by-side, you can
        arrange cores to be compared in different "tracks". To do
        that, first create and highlight a new track. Then load first
        batch of images to be compared using "Load images" item in the
        "File" menu. The second batch of core images can be loaded
        into another newly created track using similar steps. To
        arrange them side-by-side, use keyboard+mouse gesture
        "Shift-Drag" one track away from another in the vertical
        direction. If you need to move individual section along the
        depth direction, you can use "Alt-Drag" gesture to move
        sections to different depths.
      </para>
    </sect1>

    <sect1>
      <title>More question...</title>
      <para>
        More description...
      </para>
    </sect1>

  </chapter> -->

  <appendix>
    <title>Appendix</title>
    <sect1>
      <title>Why is the Image DPI Important?</title>
      <para>
        Corelyzer is a system that intends to bridge core imagery from multiple 
        sources and scale as time moves on and resolution improves. To do this, 
        the system scales all the images so that these varying resolution imagery 
        can map to a space that will indicate what the dimensions of these images 
        actually represent. In other words, so that an image of a 1.5-meter 
        section appears to be 1.5 meters in length despite how high of a 
        resolution image you take. Does this mean that getting higher resolution 
        imagery is a bad idea? No, because you can always zoom in to see the 
        finest detail available on the image. The higher the resolution the 
        image is (i.e. the higher the DPI), then the more details that can be 
        seen.
      </para>
    </sect1>

    <sect1>
      <title>Making Sure the DPI of an Image is Correct</title>
      <para>
        Here we will discuss about how to make sure a core image has
        the correct DPI. At this point, let's assume that your
        digital-line-scanner scans the core at 100 dots per
        centimeter. This is equal to 254 DPI.
      </para>

      <para>
        The first thing to do is open the image in a program like
        Adobe Photoshop, or The Gimp. At this point, we will assume
        that you are working with Photoshop.
      </para>

      <para>
        In Photoshop, you will want to view the image's properties by
        going to Image -> Image Size. A dialog will appear showing the
        image width, height, etc. If the resolution does not match the
        expected DPI then we will need to change it. Before doing that
        make sure that the Resample Image checkbox is
        unchecked. Otherwise, when you change the DPI of the image,
        the image will get resized. After you uncheck the Resample
        Image option, edit the Resolution text field and enter the
        correct DPI. At the time of this writing, most core section
        images have a DPI of 254.
      </para>

      <para>
        If you realize that more than one image contains the wrong
        DPI, you can create a batch process in Photoshop to help you
        deal with all the images.
      </para>
    </sect1>

    <sect1 id="sec.customSectionName">
      <title>Convert Tabular Data: Using a Customized Section Name</title>
      <para>
        Corelyzer's mechanism for customizing section names is powerful, but not terribly user-friendly.
        If you're comfortable with Excel, it may be a simpler tool with which to add a column
        with full section names to your data file. The updated file can then be easily imported via the Convert
        Tabular Data dialog. With that caveat in mind: if you'd prefer to learn Corelyzer's mechanism, read on!
      </para>
      <para>
        To customize section names, a comma-separated expression is entered in the Section Name Column field.
        This expression will be used to generate a section name for each row of data.
      </para>
      <para>
        Elements of the expression are separated by commas. Each element is interpreted as follows:
        <itemizedlist>
          <listitem>Numbers: interpreted as the contents of that column number for each row</listitem>
          <listitem>All other text: interpreted as-is</listitem>
        </itemizedlist>
      </para>
      <para>
        For example, consider the following tabular data.
        <ulink url="attachments/customSectionNameExample.csv">This data file is included</ulink>
        in the documentation.
        Open it with File > Load Data > Convert Tabular Data to XML... if you'd like to follow along
        in Corelyzer.
      </para>
      <figure>
        <title>Example data for comma-separated Section Name Column input</title>
        <graphic fileref="images/customSectionName-0.png" />
      </figure>
      <para>
        Components of the full section name are spread across four columns:
        <itemizedlist>
          <listitem>Site (column 1)</listitem>
          <listitem>Hole (column 2)</listitem>
          <listitem>Core (column 3)</listitem>
          <listitem>Section (column 4)</listitem>
        </itemizedlist>
        Assume the entered Data Start Row is 2.
      </para>
      <para>  
        To combine the Site, Hole, Core, and Section components into a single section name, enter the number of each column -
        <blockquote><function>1,2,3,4</function></blockquote>
        - in the Section Name Column edit field.
        You'll see "U1357A11" appear in the Section Name Preview:
        <graphic fileref="images/customSectionName-1.png" />
        
        The Site, Hole, Core, and Hole
        values in row 2 (the Data Start Row) are combined to create the previewed section name.
      </para>
      <para>
        The expression is applied to the
        contents of each row, so the combined section name for row 3 will be "U1357A12", and so on.
        You can confirm this by temporarily entering 3 in the Data Start Row field:
        <graphic fileref="images/customSectionName-1a.png" />
        Remember that the Section Name Preview always displays the interpreted
        expression in the Section Name Column for the entered Data Start Row.
      </para>
      <para>
        To clarify the components of this section name, it would help to separate them
        with a hyphen (-) or underscore (_).
        To add a hyphen between each element, enter
        <blockquote><function>1,-,2,-,3,-,4</function></blockquote>
        This will result in "U1357-A-1-1" for row 2:
        <graphic fileref="images/customSectionName-2.png" />
        Temporarily changing the Data Start Row to "12" previews "U1357-B-2-3" for row 12:
        <graphic fileref="images/customSectionName-3.png" />

        Using an underscore instead and entering
        <blockquote><function>1,_,2,_,3,_,4</function></blockquote>
        results in "U1357_A_1_1" for row 2, "U1357_A_1_2" for row 3, ..., and "U1357_B_2_3" for row 12.
      </para>
      <para>
        You can also add arbitrary text as needed. For instance, to prefix every section name with "PREFIX-",
        and suffix with "-SUFFIX", you'd enter
        <blockquote><function>PREFIX-,1,-,2,-,3,-,4,-SUFFIX</function></blockquote>
        resulting in "PREFIX-U1357-A-1-1-SUFFIX" for row 2, "PREFIX-U1357-A-1-2-SUFFIX" for row 3, and so on.
      </para>
      <para>
        Text can be inserted anywhere, not just at the beginning and end. For instance,
        <blockquote><function>1,-,2,-MOO-,3,-,4</function></blockquote>
        results in "U1357-A-MOO-1-1".
      </para>
    </sect1>

    <sect1>
      <title>How do I compare two cores?</title>
      <para>
        To compare 2 cores images or data side-by-side, you can
        arrange cores to be compared in different "tracks". To do
        that, first create and highlight a new track. Then load first
        batch of images to be compared using "Load images" item in the
        "File" menu. The second batch of core images can be loaded
        into another newly created track using similar steps. To
        arrange them side-by-side, use keyboard+mouse gesture
        "Shift-Drag" one track away from another in the vertical
        direction. If you need to move individual section along the
        depth direction, you can use "Alt-Drag" gesture to move
        sections to different depths.
      </para>
    </sect1>

    <sect1>
      <title>Corelyzer Data XML Schema</title>
      <para>
        The Corelyzer Data XML Schema is a fairly simple XML
        schema. It is based off of a version of the Geotek data XML
        format. Examples are available at Sample Data.
      </para>

      <para>
        The root of the Corelyzer XML Schema is &gt;corewall_data&lt;. Inside
        this node are blocks of section tags. The XML schema is simply
        a set of tables, one for each core section. Inside section
        tags are tags to identify which section the table belongs to,
        units of depth, listing of fields and the data retrieved from
        sensors at particular depths.

        Here is a complete example of the XML schema, with sample data
        processed from JANUS:

        <figure>
          <title>Example native Corelyzer data XML file</title>
          <graphic fileref="images/exampleXMLData.png" />
        </figure>

      </para>
    </sect1>
  </appendix>

</book>
