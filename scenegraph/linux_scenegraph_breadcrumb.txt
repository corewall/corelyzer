Linux Corelyzer Build Breadcrumbs
Using Ubuntu 18.04.4 LTS Bionic Beaver
July 28, 2020


Prereqs:
sudo apt-get install openjdk-11-jdk

Manually download and install Gradle 6 and add to your PATH, using
the Installing Manually steps here: https://gradle.org/install/

in scenegraph dir, gradle build-jni-linux to build scenegraph JAR and
libscenegraph.so in dist/.



July 27 2020
After some tweaking, all scenegraph cpp files now compile under GCC.
Linking "succeeds", even though we're not linking
required libraries...however, Corelyzer crashes
due to missing PNG library, so we *need* to be linking
required libs.

Got build of libscenegraph.so working with -shared -fPIC and refs
to required libraries. Then got complaints about undefined
symbols during Corelyzer launch. This was remedied by installing
the following libraries:

sudo apt-get install libfreetype6-dev
sudo apt-get install libpng-dev
sudo apt-get install libjpeg-dev
sudo apt-get install libtiff-dev

. To appease compiler when looking for squish.h include, also had to:
sudo apt-get install libsquish-dev

After adding /usr/lib/x86_64-linux-gnu to the -Djava.library.path (in addition
to libscenegraph.so path) in Code's launch.json file, holy crap, Corelyzer
launches and works in Code!

Now we need to figure out how to package a proper Linux app.


Once you have libscenegraph.so and scenegraph-[version].jar built in scenegraph/dist,
cd to root corelyzer dir and run 'gradle package'. There is no packaged Linux build
at present, but this compiles Corelyzer Java logic into dist/app-[version].jar and
copies all required JARs to dist as well.

Create a corelyzer/working_dir directory, and copy the app/base/help, app/base/resources,
and app/base/plugins dirs into working_dir.

From working_dir, launch Corelyzer with command (after modifying paths for your system):
java -cp "../app/dist/*" -Djava.library.path=/home/lcdev/proj/corewall/corelyzer/scenegraph/dist:/usr/lib/x86_64-linux-gnu corelyzer.ui.splashscreen.SplashScreenMain


### Resolved Issues
Bizarre Java issue: Corelyzer crashes on getContentPane().add() of 'rows'
in prefs dialog.
Solved: adding TileConfigListener before adding 'rows' to the content pane
resulted in a NullPointerException for some reason. Adding after 'rows' has
been added solves the problem!
Unclear if this is a Linux thing or a Java 11 thing...probably the former.

